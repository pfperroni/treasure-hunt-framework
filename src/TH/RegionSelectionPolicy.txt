/*
 * RegionSelectionPolicy.h
 *
 * Created on: July 27, 2019
 * Author: Peter Frank Perroni (pfperroni@gmail.com)
 */

#ifndef REGIONSELECTIONPOLICY_H_
#define REGIONSELECTIONPOLICY_H_

#include "Region.h"
#include "THTree.h"
#include <map>
#include <vector>

using namespace std;

template <class P = double>
class RegionSelectionPolicy {
public:
	RegionSelectionPolicy() {}
	virtual ~RegionSelectionPolicy() {}

	/**
	 * The caller is responsible for freeing up the memory of the region returned.
	 */
	virtual Region<P>* apply(map<Dimension<P>*, map<int, Partition<P>*>*>* partitions, THTree *tree, int ID) = 0;
};

#endif /* REGIONSELECTIONPOLICY_H_ */

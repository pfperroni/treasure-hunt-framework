<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/macros.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">macros.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="macros_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifndef MACROS_H_</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#define MACROS_H_</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;sys/time.h&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba5f5204fb5d3db46f57614337197eadc8">   33</a></span>&#160;<span class="keyword">enum</span>{ <a class="code" href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba5f5204fb5d3db46f57614337197eadc8">MSG_STARTUP</a>, <a class="code" href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba6c117ef439d802ec1770deef57ae9209">MSG_CHILD2PARENT</a>, <a class="code" href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55bafa187a138f89092130ad7061274e5464">MSG_PARENT2CHILD</a>, <a class="code" href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba9f1418c0f203f4d6960364bf033e5997">MSG_FINALIZE</a> };</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a6b65d3db31c7ad30ca90546884b6f723">   35</a></span>&#160;<span class="preprocessor">#define DEBUG_NONE 0</span></div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#acaa08d3e51e176e82b6ffff3f1baca3f">   36</a></span>&#160;<span class="preprocessor">#define DEBUG_BASIC 1</span></div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a18eba4947c7f6667baf0ca75dfa1f2a5">   37</a></span>&#160;<span class="preprocessor">#define DEBUG_DETAILED 2</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a2c70153045f9380c46a93f7308721c36">   39</a></span>&#160;<span class="preprocessor">#define RANDBEHAVIOR_RANDOM 0</span></div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a1c1be6ad19f0e8a35577a9972d2de103">   40</a></span>&#160;<span class="preprocessor">#define RANDBEHAVIOR_DETERMINISTIC 1    // Be aware that deterministic behavior also depends on external factors,</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                        <span class="comment">// like the optimization algorithms and execution configurations (wall clock time, number of evaluations, etc).</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a7f9cc3771cbd8b8cbd48fc35fb4bab04">   43</a></span>&#160;<span class="preprocessor">#define COPY_ARR(orig, dest, sz) for(int _i_=0; _i_ &lt; sz; (dest)[_i_] = (orig)[_i_], _i_++);</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#define GET_CURRTS(ts){ timeval _ts_; gettimeofday(&amp;_ts_, 0); tm *_t_ = localtime(&amp;_ts_.tv_sec); strftime(ts, 25, &quot;%F %T &quot;, _t_); }</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#define PRINT_CURRTS(){ timeval _ts_; gettimeofday(&amp;_ts_, 0); tm *_t_ = localtime(&amp;_ts_.tv_sec); printf(&quot;%04d-%02d-%02d %02d:%02d:%02d.%03d &quot;, _t_-&gt;tm_year+1900, _t_-&gt;tm_mon+1, _t_-&gt;tm_mday, _t_-&gt;tm_hour, _t_-&gt;tm_min, _t_-&gt;tm_sec, (int)_ts_.tv_usec/1000); }</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">char</span> _buffer_[1024000];</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#define DEBUG2FILE(ID, ...) { \</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">    char _fileName_[20]; \</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">    GET_CURRTS(_buffer_); \</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">    sprintf(&amp;_buffer_[20], __VA_ARGS__); char _ch_ = &#39;\n&#39;; strncat(_buffer_, &amp;_ch_, 1); \</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">    sprintf(_fileName_, &quot;log%d.out&quot;, ID); \</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">    THUtil::writeToFile(_fileName_, _buffer_); \</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">}</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#if DEBUG &gt;= DEBUG_NONE</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#define DEBUG_MANDATORY(...) { PRINT_CURRTS() printf(__VA_ARGS__); }</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#define DEBUG_MANDATORY_IF(cond, ...) {if(cond) {PRINT_CURRTS() printf(__VA_ARGS__);}}</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#define DEBUG2FILE_MANDATORY(ID, ...) DEBUG2FILE(ID, __VA_ARGS__)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#define DEBUG2FILE_MANDATORY_IF(ID, cond, ...) {if(cond) DEBUG2FILE(ID, __VA_ARGS__)}</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#define DEBUG_MANDATORY(...)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#define DEBUG_MANDATORY_IF(cond, ...)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#define DEBUG2FILE_MANDATORY(ID, ...)</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#define DEBUG2FILE_MANDATORY_IF(ID, cond, ...)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#if DEBUG &gt;= DEBUG_BASIC</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#define DEBUG_INFO(...) { PRINT_CURRTS() printf(__VA_ARGS__); }</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#define DEBUG_INFO_IF(cond, ...) {if(cond) {PRINT_CURRTS() printf(__VA_ARGS__);}}</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#define DEBUG2FILE_INFO(ID, ...) DEBUG2FILE(ID, __VA_ARGS__)</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#define DEBUG2FILE_INFO_IF(ID, cond, ...) {if(cond) DEBUG2FILE(ID, __VA_ARGS__)}</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#define DEBUG_INFO(...)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#define DEBUG_INFO_IF(cond, ...)</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#define DEBUG2FILE_INFO(ID, ...)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#define DEBUG2FILE_INFO_IF(ID, cond, ...)</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#if DEBUG == DEBUG_DETAILED</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_INT_IF(cond, id, label, table, size) \</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">    { if(cond) { DEBUG_VECTOR_INT(id, label, table, size) } }</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_INT(id, label, table, size) \</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">    printf(&quot;TH[%i] %s: [&quot;, id, label); \</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">    for(int _i_=0; _i_ &lt; size; _i_++) \</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">        printf(&quot; %i &quot;, table[_i_]); \</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">    printf(&quot;]\n&quot;);</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_DOUBLE_IF(cond, id, label, table, size) \</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">    { if(cond) { DEBUG_VECTOR_DOUBLE(id, label, table, size) } }</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_DOUBLE(id, label, table, size) \</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">    printf(&quot;TH[%i] %s: [&quot;, id, label); \</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">    for(int _i_=0; _i_ &lt; size; _i_++) \</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">        printf(&quot; %f &quot;, (table)[_i_]); \</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">    printf(&quot;]\n&quot;);</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_INT_IF(cond, id, label, table, rows, cols) \</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">    { if(cond) { DEBUG_TABLE_INT(id, label, table, rows, cols) } }</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_INT(id, label, table, rows, cols) \</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">    printf(&quot;TH[%i] %s: {\n&quot;, id, label); \</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    for(int _j_, _i_=0; _i_ &lt; rows; _i_++){ \</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">        printf(&quot; [&quot;); \</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">        for(_j_=0; _j_ &lt; cols; _j_++) \</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">            printf(&quot; %i &quot;, (table)[_i_][_j_]); \</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">        printf(&quot;]\n&quot;); \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    printf(&quot;}\n&quot;);</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_DOUBLE_IF(cond, id, label, table, rows, cols) \</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">    { if(cond) { DEBUG_TABLE_DOUBLE(id, label, table, rows, cols) } }</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_DOUBLE(id, label, table, rows, cols) \</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">    printf(&quot;TH[%i] %s: {\n&quot;, id, label); \</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">    for(int _j_, _i_=0; _i_ &lt; rows; _i_++){ \</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">        printf(&quot; [&quot;); \</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">        for(_j_=0; _j_ &lt; cols; _j_++) \</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">            printf(&quot; %f &quot;, table[_i_][_j_]); \</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">        printf(&quot;]\n&quot;); \</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">    printf(&quot;}\n&quot;);</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#define DEBUG_SOLUTION_DOUBLE(id, label, solution, rows, cols) \</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">    printf(&quot;TH[%i] %s: {\n&quot;, id, label); \</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">    for(int _j_, _i_=0; _i_ &lt; rows; _i_++){ \</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">        printf(&quot; [&quot;); \</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">        for(_j_=0; _j_ &lt; cols; _j_++) \</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">            printf(&quot; %f &quot;, (*(solution)[_i_])[_j_]-&gt;getFirstValue()); \</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">        printf(&quot;]\n&quot;); \</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">    printf(&quot;}\n&quot;);</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#define DEBUG_SOLUTION_INT(id, label, solution, rows, cols) \</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">    printf(&quot;TH[%i] %s: {\n&quot;, id, label); \</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">    for(int _j_, _i_=0; _i_ &lt; rows; _i_++){ \</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">        printf(&quot; [&quot;); \</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">        for(_j_=0; _j_ &lt; cols; _j_++) \</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">            printf(&quot; %i &quot;, (*(solution)[_i_])[_j_]-&gt;getFirstValue()); \</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">        printf(&quot;]\n&quot;); \</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">    printf(&quot;}\n&quot;);</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">#define DEBUG_REGION(label, region) { \</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor">    PRINT_CURRTS() \</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">    std::stringstream ss; \</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">    ss &lt;&lt; label &lt;&lt; &quot;: {&quot; &lt;&lt; std::endl; \</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">    for(int _i_=0, _ndim_=region-&gt;getNDimensions(); _i_ &lt; _ndim_; _i_++){ \</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">        ss &lt;&lt; &quot; [ &quot; &lt;&lt; (*region)[_i_]-&gt;getStartPoint() &lt;&lt; &quot; &quot; &lt;&lt; (*region)[_i_]-&gt;getEndPoint() &lt;&lt; &quot; ] &quot;; \</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">    std::cout &lt;&lt; ss.str() &lt;&lt; std::endl &lt;&lt; &quot;}&quot; &lt;&lt; std::endl; \</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">}</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">#define DEBUG2FILE_REGION(ID, label, region) { \</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">    std::stringstream ss; \</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">    ss &lt;&lt; label &lt;&lt; &quot;: {&quot; &lt;&lt; std::endl; \</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">    for(int _i_=0, _ndim_=region-&gt;getNDimensions(); _i_ &lt; _ndim_; _i_++){ \</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">        ss &lt;&lt; &quot; [ &quot; &lt;&lt; (*region)[_i_]-&gt;getStartPoint() &lt;&lt; &quot; &quot; &lt;&lt; (*region)[_i_]-&gt;getEndPoint() &lt;&lt; &quot; ] &quot;; \</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">    ss &lt;&lt; std::endl &lt;&lt; &quot;}&quot; &lt;&lt; std::endl; \</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="preprocessor">    DEBUG2FILE(ID, &quot;%s&quot;, ss.str().c_str()); \</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">}</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#define DEBUG_INT(label, value) printf(&quot;%s: %i\n&quot;, label, s-&gt;gFitness);</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#define DEBUG_DOUBLE(label, value) printf(&quot;%s: %f\n&quot;, label, s-&gt;gFitness);</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">#define DEBUG_TEXT(...) { PRINT_CURRTS() printf(__VA_ARGS__); }</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#define DEBUG_TEXT_IF(cond, ...) {if(cond) { PRINT_CURRTS() printf(__VA_ARGS__); } }</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#define DEBUG2FILE_TEXT(ID, ...) DEBUG2FILE(ID, __VA_ARGS__)</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#define DEBUG2FILE_TEXT_IF(ID, cond, ...) {if(cond) DEBUG2FILE(ID, __VA_ARGS__)}</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_INT_IF(cond, id, label, table, size)</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_INT(id, label, table, size)</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_DOUBLE_IF(cond, id, label, table, size)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_DOUBLE(id, label, table, size)</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_INT_IF(cond, id, label, table, rows, cols)</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_INT(id, label, table, rows, cols)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_DOUBLE_IF(cond, id, label, table, rows, cols)</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="preprocessor">#define DEBUG_TABLE_DOUBLE(id, label, table, rows, cols)</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#define DEBUG_SOLUTION_DOUBLE(id, label, solution, rows, cols)</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">#define DEBUG_SOLUTION_INT(id, label, solution, rows, cols)</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#define DEBUG_REGION(label, region)</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#define DEBUG2FILE_REGION(ID, label, region)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#define DEBUG_INT(label, value)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#define DEBUG_DOUBLE(label, value)</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#define DEBUG_TEXT(...)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#define DEBUG_TEXT_IF(cond, ...)</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#define DEBUG2FILE_TEXT(ID, ...)</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#define DEBUG2FILE_TEXT_IF(ID, cond, ...)</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a5cec16a1df9b2b27142f17b36a019dba">  188</a></span>&#160;<span class="preprocessor">#define DEBUG_MANDATORY(...)</span></div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#aee11439afcd246da73e632f5e4659c11">  189</a></span>&#160;<span class="preprocessor">#define DEBUG_MANDATORY_IF(cond, ...)</span></div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a5c5ad0e409574bcaae54438be8fb46d8">  190</a></span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_INT_IF(cond, id, label, table, size)</span></div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a8b3dc68c33c390762efe042eddd4622a">  191</a></span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_INT(id, label, table, size)</span></div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#ad88e51682795ea8e029f7c2ad7ac5c50">  192</a></span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_DOUBLE_IF(cond, id, label, table, size)</span></div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a73d2fbed3424b32253f83cbc10425fd5">  193</a></span>&#160;<span class="preprocessor">#define DEBUG_VECTOR_DOUBLE(id, label, table, size)</span></div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#aba574dbd1aed3731623c65861bd305ef">  194</a></span>&#160;<span class="preprocessor">#define DEBUG_TABLE_INT_IF(cond, id, label, table, rows, cols)</span></div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#acb5b5cf85de19ba144c481f7d4382f34">  195</a></span>&#160;<span class="preprocessor">#define DEBUG_TABLE_INT(id, label, table, rows, cols)</span></div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a0db6c988c0f890b2b441953e66e8a68c">  196</a></span>&#160;<span class="preprocessor">#define DEBUG_TABLE_DOUBLE_IF(cond, id, label, table, rows, cols)</span></div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a57f7f95b490ce3f036bd2a7f02eaa042">  197</a></span>&#160;<span class="preprocessor">#define DEBUG_TABLE_DOUBLE(id, label, table, rows, cols)</span></div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#abd6490faafa13ecc8416333b00efda73">  198</a></span>&#160;<span class="preprocessor">#define DEBUG_SOLUTION_DOUBLE(id, label, solution, rows, cols)</span></div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a477b91cf2a3441643dc92e18ee527e8c">  199</a></span>&#160;<span class="preprocessor">#define DEBUG_SOLUTION_INT(id, label, solution, rows, cols)</span></div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a9cbf70f1c2a296f96cf9298c233e02f3">  200</a></span>&#160;<span class="preprocessor">#define DEBUG_REGION(label, region)</span></div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#afbcac31e6968010f576c56e9cb0e97e9">  201</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_REGION(ID, label, region)</span></div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a5ae1e0fff9509791ce6d5806774c1f77">  202</a></span>&#160;<span class="preprocessor">#define DEBUG_INT(label, value)</span></div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a24ca66695ac380246ea409a44ecad757">  203</a></span>&#160;<span class="preprocessor">#define DEBUG_DOUBLE(label, value)</span></div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#ad53ec6a8df4dade6795b1fe32aa9b2e4">  204</a></span>&#160;<span class="preprocessor">#define DEBUG_INFO(...)</span></div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a8b737550b811f7ded595f3d300ed53a7">  205</a></span>&#160;<span class="preprocessor">#define DEBUG_INFO_IF(cond, ...)</span></div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a5b68cfbfcde3ed0d0c0fbde234c118ab">  206</a></span>&#160;<span class="preprocessor">#define DEBUG_TEXT(...)</span></div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a6e16dc99cb02a3d9a4ce770077139f81">  207</a></span>&#160;<span class="preprocessor">#define DEBUG_TEXT_IF(cond, ...)</span></div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a3229af18ce3801801e491c8da7f231b7">  208</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_MANDATORY(ID, ...)</span></div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a6b824d86e7edba861e175e949545ac4c">  209</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_MANDATORY_IF(ID, cond, ...)</span></div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#ab0bf2466429a60e89597feeedb5dd6e1">  210</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_INFO(ID, ...)</span></div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a4ad395bb9dd7b116111820f81619e2ca">  211</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_INFO_IF(ID, cond, ...)</span></div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#ac0cfcf261adf037e45c799fb5b07d5aa">  212</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_TEXT(ID, ...)</span></div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="macros_8h.xhtml#a4496cfaa57f57c2cecb0be1ce585567a">  213</a></span>&#160;<span class="preprocessor">#define DEBUG2FILE_TEXT_IF(ID, cond, ...)</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MACROS_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="macros_8h_xhtml_a06fc87d81c62e9abb8790b6e5713c55bafa187a138f89092130ad7061274e5464"><div class="ttname"><a href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55bafa187a138f89092130ad7061274e5464">MSG_PARENT2CHILD</a></div><div class="ttdef"><b>Definition:</b> <a href="macros_8h_source.xhtml#l00033">macros.h:33</a></div></div>
<div class="ttc" id="macros_8h_xhtml_a06fc87d81c62e9abb8790b6e5713c55ba5f5204fb5d3db46f57614337197eadc8"><div class="ttname"><a href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba5f5204fb5d3db46f57614337197eadc8">MSG_STARTUP</a></div><div class="ttdef"><b>Definition:</b> <a href="macros_8h_source.xhtml#l00033">macros.h:33</a></div></div>
<div class="ttc" id="macros_8h_xhtml_a06fc87d81c62e9abb8790b6e5713c55ba9f1418c0f203f4d6960364bf033e5997"><div class="ttname"><a href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba9f1418c0f203f4d6960364bf033e5997">MSG_FINALIZE</a></div><div class="ttdef"><b>Definition:</b> <a href="macros_8h_source.xhtml#l00033">macros.h:33</a></div></div>
<div class="ttc" id="macros_8h_xhtml_a06fc87d81c62e9abb8790b6e5713c55ba6c117ef439d802ec1770deef57ae9209"><div class="ttname"><a href="macros_8h.xhtml#a06fc87d81c62e9abb8790b6e5713c55ba6c117ef439d802ec1770deef57ae9209">MSG_CHILD2PARENT</a></div><div class="ttdef"><b>Definition:</b> <a href="macros_8h_source.xhtml#l00033">macros.h:33</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:33:31 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

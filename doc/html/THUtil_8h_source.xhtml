<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/THUtil.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">THUtil.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="THUtil_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef THUTIL_H_</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#define THUTIL_H_</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;cstdio&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;libgen.h&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="macros_8h.xhtml">macros.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="config_8h.xhtml">config.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classTHUtil.xhtml">THUtil</a>{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">   50</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">getRandomSeed</a>(){</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> randomSeq = 0;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> randVal;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordtype">bool</span> random = <span class="keyword">true</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#ifdef RANDBEHAVIOR</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#if RANDBEHAVIOR == RANDBEHAVIOR_DETERMINISTIC</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        random = <span class="keyword">false</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordtype">int</span> sizeRead = 0;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">if</span>(random) { <span class="comment">// Cannot be inside an ifdef due to user configuration.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            FILE *f = fopen(<span class="stringliteral">&quot;/dev/urandom&quot;</span>, <span class="stringliteral">&quot;r&quot;</span>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            sizeRead = fread(&amp;randVal, <span class="keyword">sizeof</span>(randVal), 1, f);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            fclose(f);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">if</span>(!random || sizeRead == 0){</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            randVal = ++randomSeq;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> randVal;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a819e347db961b91164ba17bcd4e95679">   75</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classTHUtil.xhtml#a819e347db961b91164ba17bcd4e95679">truncateFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        std::ofstream file;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        file.open(fileName, ios::trunc);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span>(file.is_open()) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            file.close();</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#ae3e86de83ed0d32c8057b90ee32c0a1f">   83</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classTHUtil.xhtml#ae3e86de83ed0d32c8057b90ee32c0a1f">writeToFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName, <span class="keyword">const</span> <span class="keywordtype">char</span>* content) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        std::ofstream file;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        file.open(fileName, ios::out | ios::app);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span>(file.is_open()) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            file &lt;&lt; content;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            file.close();</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a8ef13a02c176f8b3950f2acd4239c49c">   92</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classTHUtil.xhtml#a8ef13a02c176f8b3950f2acd4239c49c">writeToFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName, vector&lt;string&gt; &amp;content) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        std::ofstream file;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        file.open(fileName, ios::out | ios::app);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">if</span>(file.is_open()) {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">string</span> s : content) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                file &lt;&lt; s &lt;&lt; endl;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            file.close();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a37104e857dc60914617e0bc79cb08737">  103</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classTHUtil.xhtml#a37104e857dc60914617e0bc79cb08737">readFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName, vector&lt;string&gt; &amp;data) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        std::ifstream file;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        file.open(fileName, ios::in);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span>(file.is_open()) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            stringstream ss;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordtype">string</span> line;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            ss &lt;&lt; file.rdbuf();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">while</span>(getline(ss, line, <span class="charliteral">&#39;\n&#39;</span>)) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                data.push_back(<span class="keywordtype">string</span>(line));</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            file.close();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a576da7df177362b2c10e6d0704974c85">  117</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classTHUtil.xhtml#a576da7df177362b2c10e6d0704974c85">existsFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        FILE *file = fopen(fileName, <span class="stringliteral">&quot;r&quot;</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">if</span>(file) {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            fclose(file);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#ac405438e0d0867945b98b32226c2a5eb">  126</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classTHUtil.xhtml#ac405438e0d0867945b98b32226c2a5eb">isFolder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span>(path == NULL) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keyword">struct </span>stat stats;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        stat(path, &amp;stats);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">if</span>(S_ISDIR(stats.st_mode)) <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a5d4a93f3529c11ee522743dba7ac4bca">  138</a></span>&#160;    <span class="keywordtype">char</span>* <a class="code" href="classTHUtil.xhtml#a5d4a93f3529c11ee522743dba7ac4bca">getPath</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* path){</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">if</span>(path == NULL) <span class="keywordflow">return</span> NULL;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordtype">char</span> *buffer1 = strdup(path); <span class="comment">// Temporary buffer.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordtype">char</span> *buffer2 = strdup(path); <span class="comment">// Final buffer.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordtype">char</span>* ptr = dirname(buffer1); <span class="comment">// Pointer to the actual path inside the temporary buffer.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        strcpy(buffer2, ptr); <span class="comment">// Copy the actual path to the final buffer.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        free(buffer1); <span class="comment">// Delete the temporary buffer</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> buffer2; <span class="comment">// Return the final buffer, that must be freed up later.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">  148</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">randUniformDouble</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;seed, <span class="keywordtype">double</span> a, <span class="keywordtype">double</span> b) { <span class="keywordflow">return</span> (a==b) ? a : (a+(((double)rand_r(&amp;seed))/RAND_MAX)*(b-a)); }</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a5318218946e65adbdb431a2664d04016">  149</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classTHUtil.xhtml#a5318218946e65adbdb431a2664d04016">randUniformInt</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;seed, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b) { <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)<a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">randUniformDouble</a>(seed, (<span class="keywordtype">double</span>)a, b+0.99); }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a1961a690dfec7f0dab0be849d31828ea">  151</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="classTHUtil.xhtml#a1961a690dfec7f0dab0be849d31828ea">randNormalDouble</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;seed, <span class="keywordtype">double</span> a, <span class="keywordtype">double</span> b) {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        mt19937 gen(seed);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        normal_distribution&lt;double&gt; normal(0.5, 1);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">return</span> (a==b) ? a : a+(min(max(normal(gen), 0.0), 1.1)*(b-a));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classTHUtil.xhtml#a3b5857a6e815f895ffab6a769ed484c8">  156</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classTHUtil.xhtml#a3b5857a6e815f895ffab6a769ed484c8">randNormalInt</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;seed, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b) { <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)<a class="code" href="classTHUtil.xhtml#a1961a690dfec7f0dab0be849d31828ea">randNormalDouble</a>(seed, (<span class="keywordtype">double</span>)a, b+0.99); }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;};</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* THUTIL_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classTHUtil_xhtml_a5318218946e65adbdb431a2664d04016"><div class="ttname"><a href="classTHUtil.xhtml#a5318218946e65adbdb431a2664d04016">THUtil::randUniformInt</a></div><div class="ttdeci">static int randUniformInt(unsigned int &amp;seed, int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00149">THUtil.h:149</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ac405438e0d0867945b98b32226c2a5eb"><div class="ttname"><a href="classTHUtil.xhtml#ac405438e0d0867945b98b32226c2a5eb">THUtil::isFolder</a></div><div class="ttdeci">bool isFolder(const char *path)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00126">THUtil.h:126</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a1961a690dfec7f0dab0be849d31828ea"><div class="ttname"><a href="classTHUtil.xhtml#a1961a690dfec7f0dab0be849d31828ea">THUtil::randNormalDouble</a></div><div class="ttdeci">static double randNormalDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00151">THUtil.h:151</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ad95b7150adaf4d576de406c8e7b8142c"><div class="ttname"><a href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a></div><div class="ttdeci">static double randUniformDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00148">THUtil.h:148</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a5d4a93f3529c11ee522743dba7ac4bca"><div class="ttname"><a href="classTHUtil.xhtml#a5d4a93f3529c11ee522743dba7ac4bca">THUtil::getPath</a></div><div class="ttdeci">char * getPath(const char *path)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00138">THUtil.h:138</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ac88c9d3a82da43e5afc2cb063d2579ec"><div class="ttname"><a href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a></div><div class="ttdeci">static unsigned int getRandomSeed()</div><div class="ttdoc">Get a random seed. </div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00050">THUtil.h:50</a></div></div>
<div class="ttc" id="classTHUtil_xhtml"><div class="ttname"><a href="classTHUtil.xhtml">THUtil</a></div><div class="ttdoc">Static utility methods. </div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00040">THUtil.h:40</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ae3e86de83ed0d32c8057b90ee32c0a1f"><div class="ttname"><a href="classTHUtil.xhtml#ae3e86de83ed0d32c8057b90ee32c0a1f">THUtil::writeToFile</a></div><div class="ttdeci">static void writeToFile(const char *fileName, const char *content)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00083">THUtil.h:83</a></div></div>
<div class="ttc" id="macros_8h_xhtml"><div class="ttname"><a href="macros_8h.xhtml">macros.h</a></div><div class="ttdoc">Macros and constants must defined in this file. </div></div>
<div class="ttc" id="config_8h_xhtml"><div class="ttname"><a href="config_8h.xhtml">config.h</a></div><div class="ttdoc">Global configurations must be set in this file. </div></div>
<div class="ttc" id="classTHUtil_xhtml_a819e347db961b91164ba17bcd4e95679"><div class="ttname"><a href="classTHUtil.xhtml#a819e347db961b91164ba17bcd4e95679">THUtil::truncateFile</a></div><div class="ttdeci">static void truncateFile(const char *fileName)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00075">THUtil.h:75</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a8ef13a02c176f8b3950f2acd4239c49c"><div class="ttname"><a href="classTHUtil.xhtml#a8ef13a02c176f8b3950f2acd4239c49c">THUtil::writeToFile</a></div><div class="ttdeci">static void writeToFile(const char *fileName, vector&lt; string &gt; &amp;content)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00092">THUtil.h:92</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a3b5857a6e815f895ffab6a769ed484c8"><div class="ttname"><a href="classTHUtil.xhtml#a3b5857a6e815f895ffab6a769ed484c8">THUtil::randNormalInt</a></div><div class="ttdeci">static int randNormalInt(unsigned int &amp;seed, int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00156">THUtil.h:156</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a37104e857dc60914617e0bc79cb08737"><div class="ttname"><a href="classTHUtil.xhtml#a37104e857dc60914617e0bc79cb08737">THUtil::readFile</a></div><div class="ttdeci">static void readFile(const char *fileName, vector&lt; string &gt; &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00103">THUtil.h:103</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a576da7df177362b2c10e6d0704974c85"><div class="ttname"><a href="classTHUtil.xhtml#a576da7df177362b2c10e6d0704974c85">THUtil::existsFile</a></div><div class="ttdeci">static bool existsFile(const char *fileName)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00117">THUtil.h:117</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:33:31 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

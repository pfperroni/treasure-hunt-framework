<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/PSO.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">PSO.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="PSO_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#ifndef PSO_HPP_</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#define PSO_HPP_</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Search_8h.xhtml">TH/Search.h</a>&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1, <span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1, <span class="keyword">class</span> V = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> vSize = 1&gt;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classPSO.xhtml">   22</a></span>&#160;<span class="keyword">class </span><a class="code" href="classPSO.xhtml">PSO</a> : <span class="keyword">public</span> <a class="code" href="classSearch.xhtml">Search</a>&lt;P, pSize, F, fSize, V, vSize&gt; {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> **population;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classFitnessPolicy.xhtml">FitnessPolicy&lt;P, pSize, F, fSize, V, vSize&gt;</a>* fitnessPolicy;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> **pBest;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> **v;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> seed;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordtype">int</span> nEvals, gb, p, n;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordtype">double</span> w, c1, c2;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">bool</span> stuck;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classPSO.xhtml#ae56169385c687cb201e5f3d61f93b916">   34</a></span>&#160;    <a class="code" href="classPSO.xhtml#ae56169385c687cb201e5f3d61f93b916">PSO</a>(<span class="keywordtype">double</span> w, <span class="keywordtype">double</span> c1, <span class="keywordtype">double</span> c2, <span class="keywordtype">int</span> populationSize) : <a class="code" href="classSearch.xhtml">Search</a>&lt;P, pSize, F, fSize, V, vSize&gt;(populationSize) {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        this-&gt;w = w;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        this-&gt;c1 = c1;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        this-&gt;c2 = c2;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        population = NULL;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        fitnessPolicy = NULL;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        pBest = NULL;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        v = NULL;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        seed = 1;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        nEvals = 0;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        p = 0;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        n = 0;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        gb = -1;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        stuck = <span class="keyword">false</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a4d5d1e8b1cc91bac2f17e4559973e0c6">   51</a></span>&#160;    <a class="code" href="classPSO.xhtml#a4d5d1e8b1cc91bac2f17e4559973e0c6">~PSO</a>() {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">if</span>(pBest != NULL){</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; p; i++) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="keyword">delete</span> pBest[i];</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keyword">delete</span> pBest;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; p; i++){</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keyword">delete</span> v[i];</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keyword">delete</span> v;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a8fb3e9a46396074cbbdc2d04a83783a5">   68</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classPSO.xhtml#a8fb3e9a46396074cbbdc2d04a83783a5">startup</a>() {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        p = this-&gt;<a class="code" href="classSearch.xhtml#ab83e643822f70e74ec6ee7e81512c886">getPopulationSize</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">if</span>(p &lt;= 0) {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The population size must be greater than zero.&quot;</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        population = this-&gt;<a class="code" href="classSearch.xhtml#a5997e43c8ba27480819f3e6358f984f4">getPopulation</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        fitnessPolicy = this-&gt;<a class="code" href="classSearch.xhtml#a39d6e69d2b1573ba4564819eeee1cb4e">getFitnessPolicy</a>();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        seed = <a class="code" href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a>();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        p = this-&gt;<a class="code" href="classSearch.xhtml#ab83e643822f70e74ec6ee7e81512c886">getPopulationSize</a>();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        n = this-&gt;<a class="code" href="classSearch.xhtml#ad2d5be608164b67b1fb055b0162f4e88">getSearchSpace</a>()-&gt;getNDimensions();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        nEvals = 0;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        gb = 0;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        stuck = <span class="keyword">false</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">if</span>(pBest == NULL){</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            pBest = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>*[p];</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; p; i++) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                pBest[i] = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>(n);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span>(v == NULL) {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            v = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>*[p];</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; p; i++){</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                v[i] = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>(n);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> j, i=0; i &lt; p; i++){</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">for</span>(j=0; j &lt; n; j++) *(*v[i])[j] = <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, 0, 1);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            *pBest[i] = population[i];</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">if</span>(i != gb &amp;&amp; fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">firstIsBetter</a>(population[i], population[gb])){</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                *pBest[i] = population[i];</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                gb = i;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a4f30684c5cecc2c37f5ce822f146ffab">  108</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classPSO.xhtml#a4f30684c5cecc2c37f5ce822f146ffab">finalize</a>() {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// Override the population with the respective personal best solutions.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; p; i++){</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            *population[i] = pBest[i];</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a25e15ab34186e7c52a4789108ae24ece">  118</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classPSO.xhtml#a25e15ab34186e7c52a4789108ae24ece">next</a>(<span class="keywordtype">int</span> M) {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="classSearchSpace.xhtml">SearchSpace&lt;P&gt;</a>* searchSpace = this-&gt;<a class="code" href="classSearch.xhtml#ad2d5be608164b67b1fb055b0162f4e88">getSearchSpace</a>();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="classDimension.xhtml">Dimension&lt;P&gt;</a> *dim;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> pos1, pos2;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordtype">int</span> i, j, noImprove = 0;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordtype">double</span> currW = w - (w / M) * nEvals;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">while</span>(!found &amp;&amp; nEvals &lt; M &amp;&amp; noImprove &lt; MAX_NO_IMPROVE){</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">for</span>(i=0; i &lt; p; i++){</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordflow">for</span>(j=0; j &lt; n; j++){</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                    dim = searchSpace-&gt;<a class="code" href="classRegion.xhtml#a300afb04c957e821d362c358253130b8">getOriginalDimension</a>(j);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    <span class="comment">// c1 * RAND_DOUBLE(seed, 0, 1) * (pb[i][j] - G[i][j])</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    pos1 = (*pBest[i])[j];</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    pos1.<a class="code" href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">sub</a>((*population[i])[j]);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    pos1.<a class="code" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">mult</a>(c1 * <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, 0, 1));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    <span class="comment">// c2 * RAND_DOUBLE(seed, 0, 1) * (Gb[j] - G[i][j])</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    pos2 = (*population[gb])[j];</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                    pos2.<a class="code" href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">sub</a>((*population[i])[j]);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                    pos2.<a class="code" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">mult</a>(c2 * <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, 0, 1));</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    <span class="comment">// v[i][j] = currW * v[i][j] + c1 * RAND_DOUBLE(seed, 0, 1) * (pb[i][j] - G[i][j])</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    <span class="comment">//                           + c2 * RAND_DOUBLE(seed, 0, 1) * (Gb[j] - G[i][j]);</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    pos2.<a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a>(pos1);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                    pos1 = (*v[i])[j];</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                    pos1.<a class="code" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">mult</a>(currW);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    pos1.<a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a>(pos2);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    *(*v[i])[j] = pos1;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    (*population[i])[j]-&gt;sum((*v[i])[j]);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                    (*population[i])[j]-&gt;adjustUpperBound(dim-&gt;<a class="code" href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">getEndPoint</a>());</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                    (*population[i])[j]-&gt;adjustLowerBound(dim-&gt;<a class="code" href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">getStartPoint</a>());</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#a069122b137e7a1b9d66e1d026c4e7f1b">apply</a>(population[i]);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                nEvals++;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">for</span>(i=0; i &lt; p; i++){</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">if</span>(fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">firstIsBetter</a>(population[i], pBest[i])) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    *population[i] = pBest[i];</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                    <span class="keywordflow">if</span>(i != gb &amp;&amp; fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">firstIsBetter</a>(population[i], population[gb])){</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        found = <span class="keyword">true</span>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        gb = i;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span>(!found) noImprove++;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            currW -= w / M;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">if</span>(noImprove == MAX_NO_IMPROVE) stuck = <span class="keyword">true</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a5959db16a45b9a0ddc9289967936c306">  169</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classPSO.xhtml#a5959db16a45b9a0ddc9289967936c306">isStuck</a>(){<span class="keywordflow">return</span> stuck;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classPSO.xhtml#af47232c3034a05a2ab24e28f77196e45">  171</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classPSO.xhtml#af47232c3034a05a2ab24e28f77196e45">getBestPos</a>(){<span class="keywordflow">return</span> gb;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a337161f54e6bb3cc3012f3f5d11f3716">  173</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classPSO.xhtml#a337161f54e6bb3cc3012f3f5d11f3716">getCurrentNEvals</a>(){<span class="keywordflow">return</span> nEvals;}</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classPSO.xhtml#ab40ad5efb6079e427abb6e0b699fa018">  175</a></span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>* <a class="code" href="classPSO.xhtml#ab40ad5efb6079e427abb6e0b699fa018">getBestIndividual</a>() {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classSearch.xhtml#a5997e43c8ba27480819f3e6358f984f4">getPopulation</a>()[gb];</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a1ecbe78cffa328555e3e7428602a67ac">  179</a></span>&#160;    <a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a>* <a class="code" href="classPSO.xhtml#a1ecbe78cffa328555e3e7428602a67ac">getBestFitness</a>(){</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classPSO.xhtml#ab40ad5efb6079e427abb6e0b699fa018">getBestIndividual</a>()-&gt;getFitness();</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a4065a7f2fce1397c85fc9dded16c36da">  183</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classPSO.xhtml#a4065a7f2fce1397c85fc9dded16c36da">getBestFitness</a>(F* fitness){</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="classPSO.xhtml#ab40ad5efb6079e427abb6e0b699fa018">getBestIndividual</a>()-&gt;getFitness(fitness);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classPSO.xhtml#a62626f6c321722a0b4dcc6c19be102d2">  187</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classPSO.xhtml#a62626f6c321722a0b4dcc6c19be102d2">getName</a>(){<span class="keywordflow">return</span> <span class="stringliteral">&quot;PSO&quot;</span>;}</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;};</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* PSO_HPP_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classSearch_xhtml_a5997e43c8ba27480819f3e6358f984f4"><div class="ttname"><a href="classSearch.xhtml#a5997e43c8ba27480819f3e6358f984f4">Search::getPopulation</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; ** getPopulation()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00034">Search.h:34</a></div></div>
<div class="ttc" id="structFitness_xhtml"><div class="ttname"><a href="structFitness.xhtml">Fitness</a></div><div class="ttdoc">This structure represents the fitness (or cost) of one Solution. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00022">Fitness.h:22</a></div></div>
<div class="ttc" id="classSearch_xhtml_ad2d5be608164b67b1fb055b0162f4e88"><div class="ttname"><a href="classSearch.xhtml#ad2d5be608164b67b1fb055b0162f4e88">Search::getSearchSpace</a></div><div class="ttdeci">SearchSpace&lt; P &gt; * getSearchSpace()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00089">Search.h:89</a></div></div>
<div class="ttc" id="classPSO_xhtml_a8fb3e9a46396074cbbdc2d04a83783a5"><div class="ttname"><a href="classPSO.xhtml#a8fb3e9a46396074cbbdc2d04a83783a5">PSO::startup</a></div><div class="ttdeci">void startup()</div><div class="ttdoc">Initialize the algorithm for a new optimization. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00068">PSO.h:68</a></div></div>
<div class="ttc" id="classPartition_xhtml_a0f3cdf44760e24735951b73dfc9dd3ab"><div class="ttname"><a href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">Partition::getEndPoint</a></div><div class="ttdeci">P getEndPoint()</div><div class="ttdoc">Get the upper bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00092">Partition.h:92</a></div></div>
<div class="ttc" id="classPSO_xhtml_a4f30684c5cecc2c37f5ce822f146ffab"><div class="ttname"><a href="classPSO.xhtml#a4f30684c5cecc2c37f5ce822f146ffab">PSO::finalize</a></div><div class="ttdeci">void finalize()</div><div class="ttdoc">Perform the post-optimization process, if required. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00108">PSO.h:108</a></div></div>
<div class="ttc" id="classPSO_xhtml"><div class="ttname"><a href="classPSO.xhtml">PSO</a></div><div class="ttdoc">Implementation of the classic Particle Swarm Optimization algorithm for TH. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00022">PSO.h:22</a></div></div>
<div class="ttc" id="classSearch_xhtml_ab83e643822f70e74ec6ee7e81512c886"><div class="ttname"><a href="classSearch.xhtml#ab83e643822f70e74ec6ee7e81512c886">Search::getPopulationSize</a></div><div class="ttdeci">int getPopulationSize()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00073">Search.h:73</a></div></div>
<div class="ttc" id="classSearch_xhtml_a39d6e69d2b1573ba4564819eeee1cb4e"><div class="ttname"><a href="classSearch.xhtml#a39d6e69d2b1573ba4564819eeee1cb4e">Search::getFitnessPolicy</a></div><div class="ttdeci">FitnessPolicy&lt; P, pSize, F, fSize, V, vSize &gt; * getFitnessPolicy()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00085">Search.h:85</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ad95b7150adaf4d576de406c8e7b8142c"><div class="ttname"><a href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a></div><div class="ttdeci">static double randUniformDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00133">THUtil.h:133</a></div></div>
<div class="ttc" id="classRegion_xhtml_a300afb04c957e821d362c358253130b8"><div class="ttname"><a href="classRegion.xhtml#a300afb04c957e821d362c358253130b8">Region::getOriginalDimension</a></div><div class="ttdeci">Dimension&lt; P &gt; * getOriginalDimension(int i)</div><div class="ttdoc">Get the full search space&amp;#39;s Dimension based on its sequential index. </div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00113">Region.h:113</a></div></div>
<div class="ttc" id="structPosition_xhtml_a161444b6ea70afe4cfc7bdd81678105c"><div class="ttname"><a href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">Position::mult</a></div><div class="ttdeci">void mult(double value)</div><div class="ttdoc">Math method that multiplies (individually) each value in the list that represents the Position with t...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00236">Position.h:236</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ac88c9d3a82da43e5afc2cb063d2579ec"><div class="ttname"><a href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a></div><div class="ttdeci">static unsigned int getRandomSeed()</div><div class="ttdoc">Get a random seed. </div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00035">THUtil.h:35</a></div></div>
<div class="ttc" id="classFitnessPolicy_xhtml_a069122b137e7a1b9d66e1d026c4e7f1b"><div class="ttname"><a href="classFitnessPolicy.xhtml#a069122b137e7a1b9d66e1d026c4e7f1b">FitnessPolicy::apply</a></div><div class="ttdeci">virtual void apply(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *solution)=0</div><div class="ttdoc">This method calculates the fitness for the Solution instance provided. </div></div>
<div class="ttc" id="classSearchSpace_xhtml"><div class="ttname"><a href="classSearchSpace.xhtml">SearchSpace</a></div><div class="ttdoc">This class represents the entire search space. </div><div class="ttdef"><b>Definition:</b> <a href="SearchSpace_8h_source.xhtml#l00020">SearchSpace.h:20</a></div></div>
<div class="ttc" id="structPosition_xhtml_a4099812c9395b6dbe03ca8d25f7ae7fc"><div class="ttname"><a href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">Position::sub</a></div><div class="ttdeci">void sub(double value)</div><div class="ttdoc">Math method that subtracts the value received from each value in the list that represents the Positio...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00184">Position.h:184</a></div></div>
<div class="ttc" id="classFitnessPolicy_xhtml"><div class="ttname"><a href="classFitnessPolicy.xhtml">FitnessPolicy</a></div><div class="ttdoc">Template for the policy that calculates the fitness (or cost) for the problem under optimization...</div><div class="ttdef"><b>Definition:</b> <a href="FitnessPolicy_8h_source.xhtml#l00023">FitnessPolicy.h:23</a></div></div>
<div class="ttc" id="classPartition_xhtml_a418e5b08580b3c1d33390a13eeb8eb0f"><div class="ttname"><a href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">Partition::getStartPoint</a></div><div class="ttdeci">P getStartPoint()</div><div class="ttdoc">Get the lower bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00078">Partition.h:78</a></div></div>
<div class="ttc" id="classPSO_xhtml_a4d5d1e8b1cc91bac2f17e4559973e0c6"><div class="ttname"><a href="classPSO.xhtml#a4d5d1e8b1cc91bac2f17e4559973e0c6">PSO::~PSO</a></div><div class="ttdeci">~PSO()</div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00051">PSO.h:51</a></div></div>
<div class="ttc" id="classPSO_xhtml_a4065a7f2fce1397c85fc9dded16c36da"><div class="ttname"><a href="classPSO.xhtml#a4065a7f2fce1397c85fc9dded16c36da">PSO::getBestFitness</a></div><div class="ttdeci">void getBestFitness(F *fitness)</div><div class="ttdoc">Get the Fitness for the current best Solution. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00183">PSO.h:183</a></div></div>
<div class="ttc" id="classPSO_xhtml_ab40ad5efb6079e427abb6e0b699fa018"><div class="ttname"><a href="classPSO.xhtml#ab40ad5efb6079e427abb6e0b699fa018">PSO::getBestIndividual</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; * getBestIndividual()</div><div class="ttdoc">Get the best Solution found since the last time the method startup() was called. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00175">PSO.h:175</a></div></div>
<div class="ttc" id="classDimension_xhtml"><div class="ttname"><a href="classDimension.xhtml">Dimension</a></div><div class="ttdoc">This class represents the boundaries of a dimension within the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Dimension_8h_source.xhtml#l00018">Dimension.h:18</a></div></div>
<div class="ttc" id="classPSO_xhtml_af47232c3034a05a2ab24e28f77196e45"><div class="ttname"><a href="classPSO.xhtml#af47232c3034a05a2ab24e28f77196e45">PSO::getBestPos</a></div><div class="ttdeci">int getBestPos()</div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00171">PSO.h:171</a></div></div>
<div class="ttc" id="Search_8h_xhtml"><div class="ttname"><a href="Search_8h.xhtml">Search.h</a></div></div>
<div class="ttc" id="classPSO_xhtml_a1ecbe78cffa328555e3e7428602a67ac"><div class="ttname"><a href="classPSO.xhtml#a1ecbe78cffa328555e3e7428602a67ac">PSO::getBestFitness</a></div><div class="ttdeci">Fitness&lt; F, fSize &gt; * getBestFitness()</div><div class="ttdoc">Get the Fitness for the current best Solution. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00179">PSO.h:179</a></div></div>
<div class="ttc" id="classSolution_xhtml"><div class="ttname"><a href="classSolution.xhtml">Solution</a></div><div class="ttdoc">This class represents a population individual. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00029">Solution.h:29</a></div></div>
<div class="ttc" id="classFitnessPolicy_xhtml_acaf9a99792b12c78eaabc0acadd1de9f"><div class="ttname"><a href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">FitnessPolicy::firstIsBetter</a></div><div class="ttdeci">virtual bool firstIsBetter(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *first, Solution&lt; P, pSize, F, fSize, V, vSize &gt; *second)=0</div><div class="ttdoc">Check if the first Solution is better than the second Solution. </div></div>
<div class="ttc" id="classPSO_xhtml_ae56169385c687cb201e5f3d61f93b916"><div class="ttname"><a href="classPSO.xhtml#ae56169385c687cb201e5f3d61f93b916">PSO::PSO</a></div><div class="ttdeci">PSO(double w, double c1, double c2, int populationSize)</div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00034">PSO.h:34</a></div></div>
<div class="ttc" id="classPSO_xhtml_a25e15ab34186e7c52a4789108ae24ece"><div class="ttname"><a href="classPSO.xhtml#a25e15ab34186e7c52a4789108ae24ece">PSO::next</a></div><div class="ttdeci">void next(int M)</div><div class="ttdoc">Perform the actual optimization only until the next improvement. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00118">PSO.h:118</a></div></div>
<div class="ttc" id="structPosition_xhtml"><div class="ttname"><a href="structPosition.xhtml">Position</a></div><div class="ttdoc">This structure represents one location within 1-dimension of the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00026">Position.h:26</a></div></div>
<div class="ttc" id="structPosition_xhtml_a11256d014f2958d21a1198676208df33"><div class="ttname"><a href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">Position::sum</a></div><div class="ttdeci">void sum(double value)</div><div class="ttdoc">Math method that sums (individually) each value in the list that represents the Position with the val...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00135">Position.h:135</a></div></div>
<div class="ttc" id="classSearch_xhtml"><div class="ttname"><a href="classSearch.xhtml">Search</a></div><div class="ttdoc">Template for optimization methods. </div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00026">Search.h:26</a></div></div>
<div class="ttc" id="classPSO_xhtml_a62626f6c321722a0b4dcc6c19be102d2"><div class="ttname"><a href="classPSO.xhtml#a62626f6c321722a0b4dcc6c19be102d2">PSO::getName</a></div><div class="ttdeci">const char * getName()</div><div class="ttdoc">Get the name of the optimization method implemented. </div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00187">PSO.h:187</a></div></div>
<div class="ttc" id="classPSO_xhtml_a337161f54e6bb3cc3012f3f5d11f3716"><div class="ttname"><a href="classPSO.xhtml#a337161f54e6bb3cc3012f3f5d11f3716">PSO::getCurrentNEvals</a></div><div class="ttdeci">int getCurrentNEvals()</div><div class="ttdoc">Get the number of FitnessPolicy evaluations performed since the last time the method startup() was ca...</div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00173">PSO.h:173</a></div></div>
<div class="ttc" id="classPSO_xhtml_a5959db16a45b9a0ddc9289967936c306"><div class="ttname"><a href="classPSO.xhtml#a5959db16a45b9a0ddc9289967936c306">PSO::isStuck</a></div><div class="ttdeci">bool isStuck()</div><div class="ttdoc">Inform the ConvergenceControlPolicy that no next improvement could be found in reasonable time...</div><div class="ttdef"><b>Definition:</b> <a href="PSO_8h_source.xhtml#l00169">PSO.h:169</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Oct 7 2020 13:08:19 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

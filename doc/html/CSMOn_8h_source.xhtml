<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/CSMOn.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CSMOn.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="CSMOn_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#ifndef CSMON_H_</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#define CSMON_H_</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ConvergenceControlPolicy_8h.xhtml">ConvergenceControlPolicy.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> F = <span class="keywordtype">double</span>&gt;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structt__point.xhtml">   41</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structt__point.xhtml">t_point</a>{</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structt__point.xhtml#aacf212cab9b48c1116cd7c1ab8861b24">   42</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structt__point.xhtml#aacf212cab9b48c1116cd7c1ab8861b24">x</a>;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">   43</a></span>&#160;    F <a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="structt__point.xhtml#af5c0909d426a10340846bc6f2bb765e6">   44</a></span>&#160;    <a class="code" href="structt__point.xhtml#af5c0909d426a10340846bc6f2bb765e6">t_point</a>(<span class="keywordtype">int</span> _x, F _y){</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        x = _x, y = _y;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;};</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1, <span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1, <span class="keyword">class</span> V = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> vSize = 1&gt;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classCSMOn.xhtml">   50</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCSMOn.xhtml">CSMOn</a> : <span class="keyword">public</span> <a class="code" href="classConvergenceControlPolicy.xhtml">ConvergenceControlPolicy</a>&lt;P, pSize, F, fSize, V, vSize&gt; {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">int</span> M;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">int</span> s;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">double</span> R;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    F minEstimatedFit;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    vector&lt;t_point&lt;F&gt;&gt; *gb;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">int</span> adjustExp(<a class="code" href="classSearch.xhtml">Search&lt;P, pSize, F, fSize, V, vSize&gt;</a> *search, <span class="keywordtype">double</span> r) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordtype">int</span> sPrev = s;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        getBest(search, 2);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">if</span>(s-sPrev &lt; 2) <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordtype">int</span> pB = -1;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordtype">double</span> alpha1, alpha2;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">while</span>(search-&gt;<a class="code" href="classSearch.xhtml#a134eb5da3918998d5a3d1e049f7b585e">getCurrentNEvals</a>() &lt; M &amp;&amp; !search-&gt;<a class="code" href="classSearch.xhtml#aa64dbfe1bd713c36cc8785178a81325e">isStuck</a>()){</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">if</span>(decayE() &lt; r &amp;&amp; decayL() &lt; r){</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <span class="keywordflow">if</span>(pB == -1){</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    pB = s-2;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    alpha2 = alphaE(pB, s);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="keywordflow">else</span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                    alpha1 = alpha2;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    alpha2 = alphaE(pB, s);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                    <span class="keywordflow">if</span>(alpha2 &lt; alpha1) <span class="keywordflow">return</span> s;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">else</span> pB = -1;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            getBest(search, 1);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">int</span> adjustLog(<a class="code" href="classSearch.xhtml">Search&lt;P, pSize, F, fSize, V, vSize&gt;</a> *search, <span class="keywordtype">double</span> r, <span class="keywordtype">int</span> pT) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordtype">int</span> sPrev = s;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        getBest(search, 3);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span>(s-sPrev &lt; 3) <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordtype">double</span> alpha1 = alphaP(pT, s-1);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordtype">double</span> alpha2 = alphaP(pT, s);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">while</span>(alpha2 &gt;= alpha1 &amp;&amp; search-&gt;<a class="code" href="classSearch.xhtml#a134eb5da3918998d5a3d1e049f7b585e">getCurrentNEvals</a>() &lt; M &amp;&amp; !search-&gt;<a class="code" href="classSearch.xhtml#aa64dbfe1bd713c36cc8785178a81325e">isStuck</a>()){</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">if</span>(decayE() &gt;= r || decayL() &gt;= r) <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            getBest(search, 1);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            alpha1 = alpha2;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            alpha2 = alphaP(pT, s);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> s;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> getBest(<a class="code" href="classSearch.xhtml">Search&lt;P, pSize, F, fSize, V, vSize&gt;</a> *search, <span class="keywordtype">int</span> nBest) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; nBest &amp;&amp; search-&gt;<a class="code" href="classSearch.xhtml#a134eb5da3918998d5a3d1e049f7b585e">getCurrentNEvals</a>() &lt; M &amp;&amp; !search-&gt;<a class="code" href="classSearch.xhtml#aa64dbfe1bd713c36cc8785178a81325e">isStuck</a>(); i++){</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            search-&gt;<a class="code" href="classSearch.xhtml#ae2ea32c6a6ab958e714f19dc71fae9db">next</a>(M);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            gb-&gt;push_back(<a class="code" href="structt__point.xhtml">t_point&lt;F&gt;</a>(search-&gt;<a class="code" href="classSearch.xhtml#a134eb5da3918998d5a3d1e049f7b585e">getCurrentNEvals</a>(), search-&gt;<a class="code" href="classSearch.xhtml#a6f167beec8fc582b2d993a4bd76e241c">getBestFitness</a>()-&gt;getFirstValue()));</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            s++;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">double</span> decayE() {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">return</span> fabs(1 - ((*gb)[s].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>-minEstimatedFit) / ((*gb)[s-1].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>-minEstimatedFit));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">double</span> decayL() {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> fabs(1 - ((*gb)[s].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>-(*gb)[s-1].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>) / ((*gb)[s-1].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>-(*gb)[s-2].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">double</span> alphaE(<span class="keywordtype">int</span> p1, <span class="keywordtype">int</span> p2) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordtype">int</span> i, n = p2 - p1 + 1;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordtype">double</span> yAvg = 0, yAvgLn, ySumLn = 0, xSum = 0, xAvg, S1 = 0, S2 = 0, aux;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">for</span>(i=p1; i &lt;= p2; i++){</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            xSum += (*gb)[i].x;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            yAvg += (*gb)[i].y;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            ySumLn += log((*gb)[i].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        xAvg = xSum / n;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        yAvg /= n;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        yAvgLn = ySumLn / n;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">for</span>(i=p1; i &lt;= p2; i++){</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            aux = ((*gb)[i].x - xAvg);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            S1 += aux * ((*gb)[i].y - yAvgLn);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            S2 += aux * aux;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">return</span> (ySumLn - (S1 / S2) * xSum) / n;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">double</span> alphaP(<span class="keywordtype">int</span> p1, <span class="keywordtype">int</span> p2) {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordtype">int</span> i, n = p2 - p1 + 1;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordtype">double</span> yAvgLog, ySumLog = 0, xAvgLog, xSumLog = 0, S1 = 0, S2 = 0, aux;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">for</span>(i=p1; i &lt;= p2; i++){</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            xSumLog += log10((*gb)[i].<a class="code" href="structt__point.xhtml#aacf212cab9b48c1116cd7c1ab8861b24">x</a>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            ySumLog += log10((*gb)[i].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        xAvgLog = xSumLog / n;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        yAvgLog = ySumLog / n;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">for</span>(i=p1; i &lt;= p2; i++){</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            aux = (log10((*gb)[i].<a class="code" href="structt__point.xhtml#aacf212cab9b48c1116cd7c1ab8861b24">x</a>) - xAvgLog);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            S1 += aux * (log10((*gb)[i].<a class="code" href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">y</a>) - yAvgLog);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            S2 += aux * aux;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> (ySumLog - (S1 / S2) * xSumLog) / n;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classCSMOn.xhtml#aacd95cee8b48fc2d51120fbf7d2fd546">  157</a></span>&#160;    <a class="code" href="classCSMOn.xhtml#aacd95cee8b48fc2d51120fbf7d2fd546">CSMOn</a>(<span class="keywordtype">int</span> M, <span class="keywordtype">double</span> R, F minEstimatedFit) : <a class="code" href="classConvergenceControlPolicy.xhtml">ConvergenceControlPolicy</a>&lt;P, pSize, F, fSize, V, vSize&gt;(M) {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        this-&gt;M = this-&gt;getBudgetSize();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        this-&gt;R = R;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        this-&gt;minEstimatedFit = minEstimatedFit;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        gb = <span class="keyword">new</span> vector&lt;t_point&lt;F&gt;&gt;();</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        s = -1;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classCSMOn.xhtml#af77e878e14c14200a4e95457e611162b">  164</a></span>&#160;    <a class="code" href="classCSMOn.xhtml#af77e878e14c14200a4e95457e611162b">~CSMOn</a>() {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">delete</span> gb;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classCSMOn.xhtml#a430398bc3e096631f8cd180ee1877616">  174</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classCSMOn.xhtml#a430398bc3e096631f8cd180ee1877616">run</a>(<a class="code" href="classSearch.xhtml">Search&lt;P, pSize, F, fSize, V, vSize&gt;</a> *search) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        s = -1;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        gb-&gt;clear();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        search-&gt;<a class="code" href="classSearch.xhtml#afe8c2a6dd96ad12f77de7c8226a76028">startup</a>();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordtype">int</span> pT = -1, pS = -1;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordtype">double</span> r = 0.99;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        getBest(search, 1);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">do</span>{</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            r = max(r*r, R);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">if</span>(pS == -1)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                pT = adjustExp(search, r);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">if</span>(pT &gt; 0)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                pS = adjustLog(search, r, pT);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }<span class="keywordflow">while</span>(search-&gt;<a class="code" href="classSearch.xhtml#a134eb5da3918998d5a3d1e049f7b585e">getCurrentNEvals</a>() &lt; M &amp;&amp; (r &gt; R || pS == -1) &amp;&amp; !search-&gt;<a class="code" href="classSearch.xhtml#aa64dbfe1bd713c36cc8785178a81325e">isStuck</a>());</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        search-&gt;<a class="code" href="classSearch.xhtml#afa7022c6b9be775211d8a9be85b880f3">finalize</a>();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;};</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CSMON_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classCSMOn_xhtml_af77e878e14c14200a4e95457e611162b"><div class="ttname"><a href="classCSMOn.xhtml#af77e878e14c14200a4e95457e611162b">CSMOn::~CSMOn</a></div><div class="ttdeci">~CSMOn()</div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00164">CSMOn.h:164</a></div></div>
<div class="ttc" id="structt__point_xhtml_af5c0909d426a10340846bc6f2bb765e6"><div class="ttname"><a href="structt__point.xhtml#af5c0909d426a10340846bc6f2bb765e6">t_point::t_point</a></div><div class="ttdeci">t_point(int _x, F _y)</div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00044">CSMOn.h:44</a></div></div>
<div class="ttc" id="classCSMOn_xhtml"><div class="ttname"><a href="classCSMOn.xhtml">CSMOn</a></div><div class="ttdoc">This policy runs, monitors and controls the convergence limits for the current TH iteration...</div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00050">CSMOn.h:50</a></div></div>
<div class="ttc" id="classSearch_xhtml_aa64dbfe1bd713c36cc8785178a81325e"><div class="ttname"><a href="classSearch.xhtml#aa64dbfe1bd713c36cc8785178a81325e">Search::isStuck</a></div><div class="ttdeci">virtual bool isStuck()=0</div><div class="ttdoc">Inform the ConvergenceControlPolicy that no next improvement could be found in reasonable time...</div></div>
<div class="ttc" id="classCSMOn_xhtml_a430398bc3e096631f8cd180ee1877616"><div class="ttname"><a href="classCSMOn.xhtml#a430398bc3e096631f8cd180ee1877616">CSMOn::run</a></div><div class="ttdeci">void run(Search&lt; P, pSize, F, fSize, V, vSize &gt; *search)</div><div class="ttdoc">This method runs, monitors and limits the convergence of the optimization method during the current T...</div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00174">CSMOn.h:174</a></div></div>
<div class="ttc" id="classSearch_xhtml_a134eb5da3918998d5a3d1e049f7b585e"><div class="ttname"><a href="classSearch.xhtml#a134eb5da3918998d5a3d1e049f7b585e">Search::getCurrentNEvals</a></div><div class="ttdeci">virtual int getCurrentNEvals()=0</div><div class="ttdoc">Get the number of FitnessPolicy evaluations performed since the last time the method startup() was ca...</div></div>
<div class="ttc" id="classSearch_xhtml_afa7022c6b9be775211d8a9be85b880f3"><div class="ttname"><a href="classSearch.xhtml#afa7022c6b9be775211d8a9be85b880f3">Search::finalize</a></div><div class="ttdeci">virtual void finalize()=0</div><div class="ttdoc">Method responsible for all post-processing after the optimization has completed. </div></div>
<div class="ttc" id="classSearch_xhtml_ae2ea32c6a6ab958e714f19dc71fae9db"><div class="ttname"><a href="classSearch.xhtml#ae2ea32c6a6ab958e714f19dc71fae9db">Search::next</a></div><div class="ttdeci">virtual void next(int M)=0</div><div class="ttdoc">Method responsible for executing the actual optimization to obtain the next best result. </div></div>
<div class="ttc" id="classCSMOn_xhtml_aacd95cee8b48fc2d51120fbf7d2fd546"><div class="ttname"><a href="classCSMOn.xhtml#aacd95cee8b48fc2d51120fbf7d2fd546">CSMOn::CSMOn</a></div><div class="ttdeci">CSMOn(int M, double R, F minEstimatedFit)</div><div class="ttdoc">This constructor creates an instance of CSMOn. </div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00157">CSMOn.h:157</a></div></div>
<div class="ttc" id="classConvergenceControlPolicy_xhtml"><div class="ttname"><a href="classConvergenceControlPolicy.xhtml">ConvergenceControlPolicy</a></div><div class="ttdoc">Template for the policy that runs, monitors and controls the convergence for the current TH iteration...</div><div class="ttdef"><b>Definition:</b> <a href="ConvergenceControlPolicy_8h_source.xhtml#l00034">ConvergenceControlPolicy.h:34</a></div></div>
<div class="ttc" id="structt__point_xhtml_a17c8b258b76ba9d626ff9ddcdd7900e0"><div class="ttname"><a href="structt__point.xhtml#a17c8b258b76ba9d626ff9ddcdd7900e0">t_point::y</a></div><div class="ttdeci">F y</div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00043">CSMOn.h:43</a></div></div>
<div class="ttc" id="classSearch_xhtml_afe8c2a6dd96ad12f77de7c8226a76028"><div class="ttname"><a href="classSearch.xhtml#afe8c2a6dd96ad12f77de7c8226a76028">Search::startup</a></div><div class="ttdeci">virtual void startup()=0</div><div class="ttdoc">Method responsible for setting up all the optimization algorithm for the next optimization. </div></div>
<div class="ttc" id="structt__point_xhtml_aacf212cab9b48c1116cd7c1ab8861b24"><div class="ttname"><a href="structt__point.xhtml#aacf212cab9b48c1116cd7c1ab8861b24">t_point::x</a></div><div class="ttdeci">int x</div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00042">CSMOn.h:42</a></div></div>
<div class="ttc" id="classSearch_xhtml_a6f167beec8fc582b2d993a4bd76e241c"><div class="ttname"><a href="classSearch.xhtml#a6f167beec8fc582b2d993a4bd76e241c">Search::getBestFitness</a></div><div class="ttdeci">virtual Fitness&lt; F, fSize &gt; * getBestFitness()=0</div><div class="ttdoc">Get the Fitness for the current best Solution. </div></div>
<div class="ttc" id="classSearch_xhtml"><div class="ttname"><a href="classSearch.xhtml">Search</a></div><div class="ttdoc">Template for optimization methods. </div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00041">Search.h:41</a></div></div>
<div class="ttc" id="structt__point_xhtml"><div class="ttname"><a href="structt__point.xhtml">t_point</a></div><div class="ttdef"><b>Definition:</b> <a href="CSMOn_8h_source.xhtml#l00041">CSMOn.h:41</a></div></div>
<div class="ttc" id="ConvergenceControlPolicy_8h_xhtml"><div class="ttname"><a href="ConvergenceControlPolicy_8h.xhtml">ConvergenceControlPolicy.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:30:47 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

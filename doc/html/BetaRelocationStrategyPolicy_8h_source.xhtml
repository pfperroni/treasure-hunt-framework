<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/BetaRelocationStrategyPolicy.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BetaRelocationStrategyPolicy.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="BetaRelocationStrategyPolicy_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#ifndef BETARELOCATIONSTRATEGYPOLICY_H_</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#define BETARELOCATIONSTRATEGYPOLICY_H_</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;boost/math/distributions.hpp&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="RelocationStrategyPolicy_8h.xhtml">RelocationStrategyPolicy.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="BetaRelocationStrategyPolicy_8h.xhtml#a93f964eb314dbb05b56afb735139ad42">   43</a></span>&#160;<span class="preprocessor">#define BOOST_L(Br, step) (-Br * step + Br)</span></div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="BetaRelocationStrategyPolicy_8h.xhtml#a91faed000060fd9701cd9b6f4704a352">   44</a></span>&#160;<span class="preprocessor">#define BOOST_S(Br, step) (Br / (1.0 + exp(12 * Br * step - 6 * Br)))</span></div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="BetaRelocationStrategyPolicy_8h.xhtml#a469272f9432e47da1b7872c26d34b73f">   45</a></span>&#160;<span class="preprocessor">#define BOOST_E(Br, step) (Br / exp(12 * Br * step))</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="BetaRelocationStrategyPolicy_8h.xhtml#a3176231944b79d3ffe19639282eaffff">   46</a></span>&#160;<span class="preprocessor">#define MAX_K(step, Br, boostFunc) min(boostFunc==&#39;L&#39; ? BOOST_L(Br, step) : (boostFunc==&#39;S&#39; ? BOOST_S(Br, step) : BOOST_E(Br, step)), 1.0)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1, <span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1, <span class="keyword">class</span> V = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> vSize = 1&gt;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml">   49</a></span>&#160;<span class="keyword">class </span><a class="code" href="classBetaRelocationStrategyPolicy.xhtml">BetaRelocationStrategyPolicy</a> : <span class="keyword">public</span> <a class="code" href="classRelocationStrategyPolicy.xhtml">RelocationStrategyPolicy</a>&lt;P, pSize, F, fSize, V, vSize&gt; {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> seed;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">int</span> maxTries, nTries;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">float</span> K, maxK;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">double</span> prevBestFitness;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">char</span> diplacementType, boostInc, boostType;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">bool</span> firstPass;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">void</span> configIPDisplacementType() {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        boostType = <span class="charliteral">&#39;E&#39;</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        boostInc= 1;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        maxTries = 3;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">float</span> getAttraction(<span class="keywordtype">double</span> step, <span class="keywordtype">double</span> currGb, <span class="keywordtype">double</span> prevGb){</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordtype">float</span> Kr = 1.0f / maxTries;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">if</span>(K &lt;= 0){</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            K = maxK = <a class="code" href="BetaRelocationStrategyPolicy_8h.xhtml#a3176231944b79d3ffe19639282eaffff">MAX_K</a>(0.0, boostInc, boostType);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(1 - currGb/prevGb &lt; 5e-5){</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">if</span>((<span class="keywordtype">int</span>)(K*1e4) &lt;= (<span class="keywordtype">int</span>)(maxK*Kr*1e4)){</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordflow">if</span>(++nTries == maxTries){</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    maxK = <a class="code" href="BetaRelocationStrategyPolicy_8h.xhtml#a3176231944b79d3ffe19639282eaffff">MAX_K</a>(0.0, boostInc, boostType);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    nTries = 0;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">else</span> maxK = <a class="code" href="BetaRelocationStrategyPolicy_8h.xhtml#a3176231944b79d3ffe19639282eaffff">MAX_K</a>(step, boostInc, boostType);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                K = maxK;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">else</span> K = K - maxK*Kr;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">if</span>(K &lt; 1e-30) getAttraction(step, currGb, prevGb);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">else</span> nTries = 0;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> K;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">double</span> getPrevBestFitness(<span class="keywordtype">double</span> bestFit) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> (firstPass) ? (firstPass=<span class="keyword">false</span>)+(prevBestFitness=bestFit) : (prevBestFitness=bestFit);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml#a3787cd91ed77d150601350420ca218a6">   96</a></span>&#160;    <a class="code" href="classBetaRelocationStrategyPolicy.xhtml#a3787cd91ed77d150601350420ca218a6">BetaRelocationStrategyPolicy</a>() {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        seed = <a class="code" href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a>();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        diplacementType = <span class="charliteral">&#39;L&#39;</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        configIPDisplacementType();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        maxTries = 0;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        nTries = 0;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        K = -1;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        prevBestFitness = 0;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        firstPass = <span class="keyword">true</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml#aeaae2cffc71441309bfd6a3e85ad20b1">  106</a></span>&#160;    <a class="code" href="classBetaRelocationStrategyPolicy.xhtml#aeaae2cffc71441309bfd6a3e85ad20b1">~BetaRelocationStrategyPolicy</a>() {}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml#aeadaa254d012725ab1a67419d9cb37ef">  117</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classBetaRelocationStrategyPolicy.xhtml#aeadaa254d012725ab1a67419d9cb37ef">apply</a>(<a class="code" href="structRelocationStrategyData.xhtml">RelocationStrategyData&lt;P, pSize, F, fSize, V, vSize&gt;</a> *relocationStrategyData,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <a class="code" href="classRegion.xhtml">Region&lt;P&gt;</a> *region,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> **population,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordtype">int</span> populationSize){</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span>(relocationStrategyData == NULL || region == NULL || population == NULL || populationSize == 0)  {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;All parameters for relocation strategy must be provided.&quot;</span>);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <a class="code" href="structIterationData.xhtml">IterationData&lt;P, pSize, F, fSize, V, vSize&gt;</a> *iterationData = relocationStrategyData-&gt;<a class="code" href="structRelocationStrategyData.xhtml#af0c8811e45456b184467bb9c499fa8d9">getIterationData</a>();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">// Convert to Beta strategy.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="structBetaRelocationStrategyData.xhtml">BetaRelocationStrategyData&lt;P, pSize, F, fSize, V, vSize&gt;</a> *betaRelocationStrategyData =</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                (<a class="code" href="structBetaRelocationStrategyData.xhtml">BetaRelocationStrategyData&lt;P, pSize, F, fSize, V, vSize&gt;</a>*)relocationStrategyData;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment">// Calculate the beta displacement rate.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordtype">double</span> displacementRate;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span>(diplacementType == <span class="charliteral">&#39;L&#39;</span>) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            displacementRate = iterationData-&gt;<a class="code" href="structIterationData.xhtml#a43d0a7bbb330e66eec64e1a34e0b4487">percentageRuntime</a>();</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordtype">double</span> bestFit = iterationData-&gt;<a class="code" href="structIterationData.xhtml#a52a85ebea1211c365fce026d083feccb">getGeneralBest</a>()-&gt;getFitness()-&gt;getFirstValue();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            displacementRate = getAttraction(iterationData-&gt;<a class="code" href="structIterationData.xhtml#a43d0a7bbb330e66eec64e1a34e0b4487">percentageRuntime</a>(), bestFit, getPrevBestFitness(bestFit));</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        betaRelocationStrategyData-&gt;<a class="code" href="structBetaRelocationStrategyData.xhtml#a542d95263cbcd95c32b43f31881331a5">setDisplacementRate</a>(displacementRate);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">// Calculate the beta PDF.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordtype">double</span> betaProb = betaRelocationStrategyData-&gt;<a class="code" href="structBetaRelocationStrategyData.xhtml#a28b664079989690fdc9f56927807b3a8">getBetaStartingPerc</a>() * betaRelocationStrategyData-&gt;<a class="code" href="structBetaRelocationStrategyData.xhtml#a29fa5c11b663b88ed1771a603a0fc230">getBetaMax</a>()</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                * pow(max(betaRelocationStrategyData-&gt;<a class="code" href="structBetaRelocationStrategyData.xhtml#a96c3430655d3b0c2d0a41fe6515fbf18">getDisplacementRate</a>(), 1e-5), betaRelocationStrategyData-&gt;<a class="code" href="structBetaRelocationStrategyData.xhtml#aabba2baebc6e6b1eebc7ab84f3ceeb5b">getBetaAccelerationCoef</a>());</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        boost::math::beta_distribution&lt;&gt; distrib(betaRelocationStrategyData-&gt;<a class="code" href="structBetaRelocationStrategyData.xhtml#a29fa5c11b663b88ed1771a603a0fc230">getBetaMax</a>()-betaProb, betaProb);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">// Relocate the population members that were not repositioned on previous processes.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> pos, tmp;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="classDimension.xhtml">Dimension&lt;P&gt;</a> *dim;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        map&lt;int, Dimension&lt;P&gt;*&gt; *originalDimensions = region-&gt;<a class="code" href="classRegion.xhtml#aed7a4120591db745b5b424fb94588294">getOriginalDimensions</a>();</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *parentBest = iterationData-&gt;<a class="code" href="structIterationData.xhtml#a5a7af2b925eb3a2e507988e83383d969">getParentBest</a>();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordtype">int</span> n = population[0]-&gt;<a class="code" href="classSolution.xhtml#ad5b8c8ce272efaada80e93b0e097d1cd">getNDimensions</a>();</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> j, i=0; i &lt; populationSize; i++){</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            population[i]-&gt;<a class="code" href="classSolution.xhtml#a84c713b707a570add53e85a28196bb3e">reset</a>(region); <span class="comment">// Obtain a new position inside TH instance&#39;s sub-region for this population member.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="comment">// Relocate this individual according to the beta strategy toward the parent best.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">for</span>(j=0; j &lt; n; j++){</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                dim = (*originalDimensions)[j];</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                pos = (*population[i])[j];</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                tmp = pos;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                tmp.sub((*parentBest)[j]);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                tmp.mult(quantile(distrib, <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, 0, 1)));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                pos.sub(tmp);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                pos.adjustUpperBound(dim-&gt;<a class="code" href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">getEndPoint</a>());</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                pos.adjustLowerBound(dim-&gt;<a class="code" href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">getStartPoint</a>());</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                *(*population[i])[j] = pos; <span class="comment">//quantile(distrib, THUtil::randUniformDouble(seed, 0, 1)) * (pos - parentBest[j]);</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml#a12eb75cb0893c1e1e7795649daa44fdc">  170</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classBetaRelocationStrategyPolicy.xhtml#a12eb75cb0893c1e1e7795649daa44fdc">setIPDisplacementType</a>() {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        configIPDisplacementType();</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        diplacementType = <span class="charliteral">&#39;I&#39;</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml#aaf793d5a18e2ae159254e7f41b005a6e">  175</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classBetaRelocationStrategyPolicy.xhtml#aaf793d5a18e2ae159254e7f41b005a6e">setIPDisplacementType</a>(<span class="keywordtype">char</span> boostType, <span class="keywordtype">double</span> boostInc, <span class="keywordtype">int</span> nTries) {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        this-&gt;boostType = boostType;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        this-&gt;boostInc= boostInc;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        this-&gt;maxTries = nTries;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        diplacementType = <span class="charliteral">&#39;I&#39;</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classBetaRelocationStrategyPolicy.xhtml#ae787cff433b5ce2b6ee8c37b11d6fbfb">  182</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classBetaRelocationStrategyPolicy.xhtml#ae787cff433b5ce2b6ee8c37b11d6fbfb">setLinearDisplacementType</a>() {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        diplacementType = <span class="charliteral">&#39;L&#39;</span>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;};</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* BETARELOCATIONSTRATEGYPOLICY_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml_aeadaa254d012725ab1a67419d9cb37ef"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml#aeadaa254d012725ab1a67419d9cb37ef">BetaRelocationStrategyPolicy::apply</a></div><div class="ttdeci">void apply(RelocationStrategyData&lt; P, pSize, F, fSize, V, vSize &gt; *relocationStrategyData, Region&lt; P &gt; *region, Solution&lt; P, pSize, F, fSize, V, vSize &gt; **population, int populationSize)</div><div class="ttdoc">This method implements the policy to relocate TH instance&amp;#39;s population at every TH instance&amp;#39;s iterati...</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00117">BetaRelocationStrategyPolicy.h:117</a></div></div>
<div class="ttc" id="classPartition_xhtml_a0f3cdf44760e24735951b73dfc9dd3ab"><div class="ttname"><a href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">Partition::getEndPoint</a></div><div class="ttdeci">P getEndPoint()</div><div class="ttdoc">Get the upper bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00107">Partition.h:107</a></div></div>
<div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml_aeaae2cffc71441309bfd6a3e85ad20b1"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml#aeaae2cffc71441309bfd6a3e85ad20b1">BetaRelocationStrategyPolicy::~BetaRelocationStrategyPolicy</a></div><div class="ttdeci">~BetaRelocationStrategyPolicy()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00106">BetaRelocationStrategyPolicy.h:106</a></div></div>
<div class="ttc" id="classRelocationStrategyPolicy_xhtml"><div class="ttname"><a href="classRelocationStrategyPolicy.xhtml">RelocationStrategyPolicy</a></div><div class="ttdoc">Template for the policy that relocates the population at every TH instance&amp;#39;s iteration. </div><div class="ttdef"><b>Definition:</b> <a href="RelocationStrategyPolicy_8h_source.xhtml#l00034">RelocationStrategyPolicy.h:34</a></div></div>
<div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml">BetaRelocationStrategyPolicy</a></div><div class="ttdoc">This policy relocates the population based on the Beta-distribution strategy. </div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00049">BetaRelocationStrategyPolicy.h:49</a></div></div>
<div class="ttc" id="RelocationStrategyPolicy_8h_xhtml"><div class="ttname"><a href="RelocationStrategyPolicy_8h.xhtml">RelocationStrategyPolicy.h</a></div></div>
<div class="ttc" id="classRegion_xhtml_aed7a4120591db745b5b424fb94588294"><div class="ttname"><a href="classRegion.xhtml#aed7a4120591db745b5b424fb94588294">Region::getOriginalDimensions</a></div><div class="ttdeci">map&lt; int, Dimension&lt; P &gt; * &gt; * getOriginalDimensions()</div><div class="ttdoc">Obtains a pointer to the map containing the dimensions that compose the entire search space...</div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00116">Region.h:116</a></div></div>
<div class="ttc" id="classRegion_xhtml"><div class="ttname"><a href="classRegion.xhtml">Region</a></div><div class="ttdoc">This class represents a region within the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00043">Region.h:43</a></div></div>
<div class="ttc" id="BetaRelocationStrategyPolicy_8h_xhtml_a3176231944b79d3ffe19639282eaffff"><div class="ttname"><a href="BetaRelocationStrategyPolicy_8h.xhtml#a3176231944b79d3ffe19639282eaffff">MAX_K</a></div><div class="ttdeci">#define MAX_K(step, Br, boostFunc)</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00046">BetaRelocationStrategyPolicy.h:46</a></div></div>
<div class="ttc" id="classSolution_xhtml_a84c713b707a570add53e85a28196bb3e"><div class="ttname"><a href="classSolution.xhtml#a84c713b707a570add53e85a28196bb3e">Solution::reset</a></div><div class="ttdeci">void reset(Region&lt; P &gt; *r, Solution&lt; P, pSize, F, fSize, V, vSize &gt; *bias=NULL)</div><div class="ttdoc">Reset the position of the current Solution in the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00294">Solution.h:294</a></div></div>
<div class="ttc" id="structRelocationStrategyData_xhtml"><div class="ttname"><a href="structRelocationStrategyData.xhtml">RelocationStrategyData</a></div><div class="ttdoc">Repository class that stores useful data required for the population&amp;#39;s relocation strategy...</div><div class="ttdef"><b>Definition:</b> <a href="RelocationStrategyData_8h_source.xhtml#l00034">RelocationStrategyData.h:34</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ad95b7150adaf4d576de406c8e7b8142c"><div class="ttname"><a href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a></div><div class="ttdeci">static double randUniformDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00148">THUtil.h:148</a></div></div>
<div class="ttc" id="structBetaRelocationStrategyData_xhtml_a542d95263cbcd95c32b43f31881331a5"><div class="ttname"><a href="structBetaRelocationStrategyData.xhtml#a542d95263cbcd95c32b43f31881331a5">BetaRelocationStrategyData::setDisplacementRate</a></div><div class="ttdeci">void setDisplacementRate(double displacementRate)</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyData_8h_source.xhtml#l00077">BetaRelocationStrategyData.h:77</a></div></div>
<div class="ttc" id="classSolution_xhtml_ad5b8c8ce272efaada80e93b0e097d1cd"><div class="ttname"><a href="classSolution.xhtml#ad5b8c8ce272efaada80e93b0e097d1cd">Solution::getNDimensions</a></div><div class="ttdeci">int getNDimensions()</div><div class="ttdoc">Get the number of dimensions of this Solution instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00329">Solution.h:329</a></div></div>
<div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml_a12eb75cb0893c1e1e7795649daa44fdc"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml#a12eb75cb0893c1e1e7795649daa44fdc">BetaRelocationStrategyPolicy::setIPDisplacementType</a></div><div class="ttdeci">void setIPDisplacementType()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00170">BetaRelocationStrategyPolicy.h:170</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ac88c9d3a82da43e5afc2cb063d2579ec"><div class="ttname"><a href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a></div><div class="ttdeci">static unsigned int getRandomSeed()</div><div class="ttdoc">Get a random seed. </div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00050">THUtil.h:50</a></div></div>
<div class="ttc" id="structIterationData_xhtml"><div class="ttname"><a href="structIterationData.xhtml">IterationData</a></div><div class="ttdoc">Repository class that stores useful data about the TH iterations. </div><div class="ttdef"><b>Definition:</b> <a href="IterationData_8h_source.xhtml#l00033">IterationData.h:33</a></div></div>
<div class="ttc" id="classPartition_xhtml_a418e5b08580b3c1d33390a13eeb8eb0f"><div class="ttname"><a href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">Partition::getStartPoint</a></div><div class="ttdeci">P getStartPoint()</div><div class="ttdoc">Get the lower bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00093">Partition.h:93</a></div></div>
<div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml_a3787cd91ed77d150601350420ca218a6"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml#a3787cd91ed77d150601350420ca218a6">BetaRelocationStrategyPolicy::BetaRelocationStrategyPolicy</a></div><div class="ttdeci">BetaRelocationStrategyPolicy()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00096">BetaRelocationStrategyPolicy.h:96</a></div></div>
<div class="ttc" id="classDimension_xhtml"><div class="ttname"><a href="classDimension.xhtml">Dimension</a></div><div class="ttdoc">This class represents the boundaries of a dimension within the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Dimension_8h_source.xhtml#l00033">Dimension.h:33</a></div></div>
<div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml_aaf793d5a18e2ae159254e7f41b005a6e"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml#aaf793d5a18e2ae159254e7f41b005a6e">BetaRelocationStrategyPolicy::setIPDisplacementType</a></div><div class="ttdeci">void setIPDisplacementType(char boostType, double boostInc, int nTries)</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00175">BetaRelocationStrategyPolicy.h:175</a></div></div>
<div class="ttc" id="structBetaRelocationStrategyData_xhtml_a29fa5c11b663b88ed1771a603a0fc230"><div class="ttname"><a href="structBetaRelocationStrategyData.xhtml#a29fa5c11b663b88ed1771a603a0fc230">BetaRelocationStrategyData::getBetaMax</a></div><div class="ttdeci">double getBetaMax()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyData_8h_source.xhtml#l00057">BetaRelocationStrategyData.h:57</a></div></div>
<div class="ttc" id="structBetaRelocationStrategyData_xhtml_aabba2baebc6e6b1eebc7ab84f3ceeb5b"><div class="ttname"><a href="structBetaRelocationStrategyData.xhtml#aabba2baebc6e6b1eebc7ab84f3ceeb5b">BetaRelocationStrategyData::getBetaAccelerationCoef</a></div><div class="ttdeci">double getBetaAccelerationCoef()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyData_8h_source.xhtml#l00049">BetaRelocationStrategyData.h:49</a></div></div>
<div class="ttc" id="structBetaRelocationStrategyData_xhtml"><div class="ttname"><a href="structBetaRelocationStrategyData.xhtml">BetaRelocationStrategyData</a></div><div class="ttdoc">This class is a repository containing useful data to perform the Beta-relocation strategy. </div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyData_8h_source.xhtml#l00034">BetaRelocationStrategyData.h:34</a></div></div>
<div class="ttc" id="classSolution_xhtml"><div class="ttname"><a href="classSolution.xhtml">Solution</a></div><div class="ttdoc">This class represents a population individual. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00044">Solution.h:44</a></div></div>
<div class="ttc" id="classBetaRelocationStrategyPolicy_xhtml_ae787cff433b5ce2b6ee8c37b11d6fbfb"><div class="ttname"><a href="classBetaRelocationStrategyPolicy.xhtml#ae787cff433b5ce2b6ee8c37b11d6fbfb">BetaRelocationStrategyPolicy::setLinearDisplacementType</a></div><div class="ttdeci">void setLinearDisplacementType()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyPolicy_8h_source.xhtml#l00182">BetaRelocationStrategyPolicy.h:182</a></div></div>
<div class="ttc" id="structIterationData_xhtml_a5a7af2b925eb3a2e507988e83383d969"><div class="ttname"><a href="structIterationData.xhtml#a5a7af2b925eb3a2e507988e83383d969">IterationData::getParentBest</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; * getParentBest()</div><div class="ttdef"><b>Definition:</b> <a href="IterationData_8h_source.xhtml#l00201">IterationData.h:201</a></div></div>
<div class="ttc" id="structRelocationStrategyData_xhtml_af0c8811e45456b184467bb9c499fa8d9"><div class="ttname"><a href="structRelocationStrategyData.xhtml#af0c8811e45456b184467bb9c499fa8d9">RelocationStrategyData::getIterationData</a></div><div class="ttdeci">IterationData&lt; P, pSize, F, fSize, V, vSize &gt; * getIterationData()</div><div class="ttdef"><b>Definition:</b> <a href="RelocationStrategyData_8h_source.xhtml#l00051">RelocationStrategyData.h:51</a></div></div>
<div class="ttc" id="structIterationData_xhtml_a52a85ebea1211c365fce026d083feccb"><div class="ttname"><a href="structIterationData.xhtml#a52a85ebea1211c365fce026d083feccb">IterationData::getGeneralBest</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; * getGeneralBest()</div><div class="ttdef"><b>Definition:</b> <a href="IterationData_8h_source.xhtml#l00103">IterationData.h:103</a></div></div>
<div class="ttc" id="structPosition_xhtml"><div class="ttname"><a href="structPosition.xhtml">Position</a></div><div class="ttdoc">This structure represents one location within 1-dimension of the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00041">Position.h:41</a></div></div>
<div class="ttc" id="structIterationData_xhtml_a43d0a7bbb330e66eec64e1a34e0b4487"><div class="ttname"><a href="structIterationData.xhtml#a43d0a7bbb330e66eec64e1a34e0b4487">IterationData::percentageRuntime</a></div><div class="ttdeci">double percentageRuntime()</div><div class="ttdoc">Obtains the percentage of running time that has already been spent, according to the stopping criteri...</div><div class="ttdef"><b>Definition:</b> <a href="IterationData_8h_source.xhtml#l00185">IterationData.h:185</a></div></div>
<div class="ttc" id="structBetaRelocationStrategyData_xhtml_a28b664079989690fdc9f56927807b3a8"><div class="ttname"><a href="structBetaRelocationStrategyData.xhtml#a28b664079989690fdc9f56927807b3a8">BetaRelocationStrategyData::getBetaStartingPerc</a></div><div class="ttdeci">double getBetaStartingPerc()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyData_8h_source.xhtml#l00065">BetaRelocationStrategyData.h:65</a></div></div>
<div class="ttc" id="structBetaRelocationStrategyData_xhtml_a96c3430655d3b0c2d0a41fe6515fbf18"><div class="ttname"><a href="structBetaRelocationStrategyData.xhtml#a96c3430655d3b0c2d0a41fe6515fbf18">BetaRelocationStrategyData::getDisplacementRate</a></div><div class="ttdeci">double getDisplacementRate()</div><div class="ttdef"><b>Definition:</b> <a href="BetaRelocationStrategyData_8h_source.xhtml#l00073">BetaRelocationStrategyData.h:73</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:33:31 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/BestList.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BestList.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="BestList_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef BESTLIST_H_</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#define BESTLIST_H_</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Solution_8h.xhtml">Solution.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1, <span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1, <span class="keyword">class</span> V = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> vSize = 1&gt;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classBestList.xhtml">   33</a></span>&#160;<span class="keyword">class </span><a class="code" href="classBestList.xhtml">BestList</a> {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> **bestList;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">int</span> listSize;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">int</span> n;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classBestList.xhtml#a4bd603848a6e66f1242323f945fedbe9">   44</a></span>&#160;    <a class="code" href="classBestList.xhtml#a4bd603848a6e66f1242323f945fedbe9">BestList</a>(<span class="keywordtype">int</span> listSize, <span class="keywordtype">int</span> n){</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span>(listSize &lt;= 0) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The best list size is invalid.&quot;</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        this-&gt;listSize = listSize;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        this-&gt;n = n;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        bestList = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>*[listSize];</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; listSize; i++) bestList[i] = NULL;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classBestList.xhtml#ae664f030cfdd2440bc05ef4873915d32">   56</a></span>&#160;    <a class="code" href="classBestList.xhtml#ae664f030cfdd2440bc05ef4873915d32">BestList</a>(<a class="code" href="classBestList.xhtml">BestList&lt;P, pSize, F, fSize, V, vSize&gt;</a>* bestList){</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        this-&gt;listSize = bestList-&gt;<a class="code" href="classBestList.xhtml#ac627a3267d2b7cf8f579cc7e5b77d2e3">getListSize</a>();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">if</span>(bestList == NULL || this-&gt;listSize == 0) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The best list size is invalid.&quot;</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        this-&gt;n = bestList-&gt;<a class="code" href="classBestList.xhtml#adaf365728d0834a5f2b7f3c47dd76788">getNDimensions</a>();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        this-&gt;bestList = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>*[listSize];</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; listSize; i++) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            solution = (*bestList)[i];</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">if</span>(solution != NULL) this-&gt;bestList[i] = <span class="keyword">new</span> <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>(solution);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">else</span> this-&gt;bestList[i] = NULL;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classBestList.xhtml#a7d0ac19666923c1c94a130a16b176125">   72</a></span>&#160;    <a class="code" href="classBestList.xhtml#a7d0ac19666923c1c94a130a16b176125">~BestList</a>() {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; listSize; i++){</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">if</span>(bestList[i] != NULL) <span class="keyword">delete</span> bestList[i];</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">delete</span> bestList;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classBestList.xhtml#a47b06e0c8d982f3d89769ce6b66adf0c">   87</a></span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>* <a class="code" href="classBestList.xhtml#a47b06e0c8d982f3d89769ce6b66adf0c">operator []</a>(<span class="keywordtype">int</span> idx){</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span>(idx &lt; 0 || idx &gt; listSize) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The best list index is invalid&quot;</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">return</span> bestList[idx];</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classBestList.xhtml#a4a5650fb72c71d6027540daa96de0d39">  101</a></span>&#160;    <span class="keywordtype">void</span> <span class="keyword">set</span>(<span class="keywordtype">int</span> idx, <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution){</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">if</span>(idx &lt; 0 || idx &gt; listSize) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The best list index is invalid&quot;</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">if</span>(solution == NULL) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The solution cannot be empty.&quot;</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">if</span>(bestList[idx] != NULL) <span class="keyword">delete</span> bestList[idx];</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        bestList[idx] = solution;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classBestList.xhtml#ac627a3267d2b7cf8f579cc7e5b77d2e3">  108</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classBestList.xhtml#ac627a3267d2b7cf8f579cc7e5b77d2e3">getListSize</a>(){</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> listSize;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classBestList.xhtml#adaf365728d0834a5f2b7f3c47dd76788">  112</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classBestList.xhtml#adaf365728d0834a5f2b7f3c47dd76788">getNDimensions</a>() {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> n;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;};</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* BESTLIST_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classBestList_xhtml"><div class="ttname"><a href="classBestList.xhtml">BestList</a></div><div class="ttdoc">An instance of this class holds the best-list for its respective TH instance. </div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00033">BestList.h:33</a></div></div>
<div class="ttc" id="classBestList_xhtml_a7d0ac19666923c1c94a130a16b176125"><div class="ttname"><a href="classBestList.xhtml#a7d0ac19666923c1c94a130a16b176125">BestList::~BestList</a></div><div class="ttdeci">~BestList()</div><div class="ttdoc">This destructor deletes all Solutions stored in the best-list (i.e. releases their memories)...</div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00072">BestList.h:72</a></div></div>
<div class="ttc" id="classBestList_xhtml_a47b06e0c8d982f3d89769ce6b66adf0c"><div class="ttname"><a href="classBestList.xhtml#a47b06e0c8d982f3d89769ce6b66adf0c">BestList::operator[]</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; * operator[](int idx)</div><div class="ttdoc">Operator that selects a Solution based on its index in the list of solutions. </div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00087">BestList.h:87</a></div></div>
<div class="ttc" id="classBestList_xhtml_adaf365728d0834a5f2b7f3c47dd76788"><div class="ttname"><a href="classBestList.xhtml#adaf365728d0834a5f2b7f3c47dd76788">BestList::getNDimensions</a></div><div class="ttdeci">int getNDimensions()</div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00112">BestList.h:112</a></div></div>
<div class="ttc" id="classSolution_xhtml"><div class="ttname"><a href="classSolution.xhtml">Solution</a></div><div class="ttdoc">This class represents a population individual. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00044">Solution.h:44</a></div></div>
<div class="ttc" id="classBestList_xhtml_ae664f030cfdd2440bc05ef4873915d32"><div class="ttname"><a href="classBestList.xhtml#ae664f030cfdd2440bc05ef4873915d32">BestList::BestList</a></div><div class="ttdeci">BestList(BestList&lt; P, pSize, F, fSize, V, vSize &gt; *bestList)</div><div class="ttdoc">Constructor that generates a new best-list initialized as a full copy of another BestList instance...</div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00056">BestList.h:56</a></div></div>
<div class="ttc" id="classBestList_xhtml_ac627a3267d2b7cf8f579cc7e5b77d2e3"><div class="ttname"><a href="classBestList.xhtml#ac627a3267d2b7cf8f579cc7e5b77d2e3">BestList::getListSize</a></div><div class="ttdeci">int getListSize()</div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00108">BestList.h:108</a></div></div>
<div class="ttc" id="classBestList_xhtml_a4bd603848a6e66f1242323f945fedbe9"><div class="ttname"><a href="classBestList.xhtml#a4bd603848a6e66f1242323f945fedbe9">BestList::BestList</a></div><div class="ttdeci">BestList(int listSize, int n)</div><div class="ttdoc">Constructor that generates an empty best-list instance. </div><div class="ttdef"><b>Definition:</b> <a href="BestList_8h_source.xhtml#l00044">BestList.h:44</a></div></div>
<div class="ttc" id="Solution_8h_xhtml"><div class="ttname"><a href="Solution_8h.xhtml">Solution.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:30:47 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/HillClimbing.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">HillClimbing.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="HillClimbing_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#ifndef HILLCLIMBING_H_</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#define HILLCLIMBING_H_</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Search_8h.xhtml">TH/Search.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1, <span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1, <span class="keyword">class</span> V = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> vSize = 1&gt;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="classHillClimbing.xhtml">HillClimbing</a> : <span class="keyword">public</span> <a class="code" href="classSearch.xhtml">Search</a>&lt;P, pSize, F, fSize, V, vSize&gt; {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> **population;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classFitnessPolicy.xhtml">FitnessPolicy&lt;P, pSize, F, fSize, V, vSize&gt;</a>* fitnessPolicy;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> seed;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">int</span> nEvals, gb, p, n;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">double</span> percMove, step;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">bool</span> stuck;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#ac41e8c4d1d1319c82732f0d93bb361fd">   47</a></span>&#160;    <a class="code" href="classHillClimbing.xhtml#ac41e8c4d1d1319c82732f0d93bb361fd">HillClimbing</a>(<span class="keywordtype">double</span> percMove, <span class="keywordtype">double</span> step, <span class="keywordtype">int</span> populationSize) : <a class="code" href="classSearch.xhtml">Search</a>&lt;P, pSize, F, fSize, V, vSize&gt;(populationSize) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        this-&gt;percMove = percMove;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        this-&gt;step = step;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        population = NULL;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        fitnessPolicy = NULL;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        seed = 1;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        nEvals = 0;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        p = 0;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        n = 0;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        gb = -1;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        stuck = <span class="keyword">false</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a4355842a97a5613a57c7b31a0a1c4793">   61</a></span>&#160;    <a class="code" href="classHillClimbing.xhtml#a4355842a97a5613a57c7b31a0a1c4793">~HillClimbing</a>() {}</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a845d2e4cac39582bf1218a90431c2f3c">   66</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classHillClimbing.xhtml#a845d2e4cac39582bf1218a90431c2f3c">startup</a>() {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        p = this-&gt;<a class="code" href="classSearch.xhtml#ab83e643822f70e74ec6ee7e81512c886">getPopulationSize</a>();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">if</span>(p &lt;= 0) {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The population size must be greater than zero.&quot;</span>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        population = this-&gt;<a class="code" href="classSearch.xhtml#a5997e43c8ba27480819f3e6358f984f4">getPopulation</a>();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        fitnessPolicy = this-&gt;<a class="code" href="classSearch.xhtml#a39d6e69d2b1573ba4564819eeee1cb4e">getFitnessPolicy</a>();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        seed = <a class="code" href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        n = this-&gt;<a class="code" href="classSearch.xhtml#ad2d5be608164b67b1fb055b0162f4e88">getSearchSpace</a>()-&gt;getNDimensions();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        nEvals = 0;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        gb = 0;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        stuck = <span class="keyword">false</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=1; i &lt; p; i++){</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keywordflow">if</span>(fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">firstIsBetter</a>(population[i], population[gb])){</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                gb = i;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a5339276bd6e3c941b1a16c30a7794f1c">   89</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classHillClimbing.xhtml#a5339276bd6e3c941b1a16c30a7794f1c">finalize</a>(){}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a7c67b745880b93be26eb4fa113f0e37f">   94</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classHillClimbing.xhtml#a7c67b745880b93be26eb4fa113f0e37f">next</a>(<span class="keywordtype">int</span> M){</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> candidate(n);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="classSearchSpace.xhtml">SearchSpace&lt;P&gt;</a>* searchSpace = this-&gt;<a class="code" href="classSearch.xhtml#ad2d5be608164b67b1fb055b0162f4e88">getSearchSpace</a>();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="classDimension.xhtml">Dimension&lt;P&gt;</a> *dim;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordtype">int</span> i, d, noImprove = 0;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordtype">bool</span> found = <span class="keyword">false</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">while</span>((!found &amp;&amp; noImprove &lt; MAX_NO_IMPROVE) &amp;&amp; nEvals &lt; M){</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">for</span>(i=0; i &lt; p &amp;&amp; nEvals &lt; M; i++){</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="keywordflow">for</span>(d=0; d &lt; n &amp;&amp; nEvals &lt; M; d++){</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    <span class="keywordflow">if</span>(<a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, 0, 1) &gt; percMove) <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    candidate = population[i]; <span class="comment">// Copy the solution.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    dim = searchSpace-&gt;<a class="code" href="classRegion.xhtml#a300afb04c957e821d362c358253130b8">getOriginalDimension</a>(d);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    candidate[d]-&gt;sum(step * <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, dim-&gt;<a class="code" href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">getStartPoint</a>(), dim-&gt;<a class="code" href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">getEndPoint</a>()));</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    candidate[d]-&gt;adjustUpperBound(dim-&gt;<a class="code" href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">getEndPoint</a>());</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    candidate[d]-&gt;adjustLowerBound(dim-&gt;<a class="code" href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">getStartPoint</a>());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#a069122b137e7a1b9d66e1d026c4e7f1b">apply</a>(&amp;candidate);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    nEvals++;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    <span class="keywordflow">if</span>(fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">firstIsBetter</a>(&amp;candidate, population[i])) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                        *(*population[i])[d] = candidate[d];</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                        <span class="keywordflow">if</span>(i != gb &amp;&amp; fitnessPolicy-&gt;<a class="code" href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">firstIsBetter</a>(population[i], population[gb])){</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                            found = <span class="keyword">true</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                            gb = i;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    <span class="keywordflow">else</span> *candidate[d] = (*population[i])[d];</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">if</span>(!found) noImprove++;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">if</span>(noImprove == MAX_NO_IMPROVE) stuck = <span class="keyword">true</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a6361582c1aeab1be7fce4b553530691f">  126</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classHillClimbing.xhtml#a6361582c1aeab1be7fce4b553530691f">isStuck</a>(){<span class="keywordflow">return</span> stuck;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#ae2e46d5992ba0b32ede2d00f891ae52d">  128</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classHillClimbing.xhtml#ae2e46d5992ba0b32ede2d00f891ae52d">getBestPos</a>(){<span class="keywordflow">return</span> gb;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#afb9bb2d5757df676cc1fe6079d82cad2">  130</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classHillClimbing.xhtml#afb9bb2d5757df676cc1fe6079d82cad2">getCurrentNEvals</a>(){<span class="keywordflow">return</span> nEvals;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a13d4097b5483b2aaaff381af6b4ccf79">  132</a></span>&#160;    <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a>* <a class="code" href="classHillClimbing.xhtml#a13d4097b5483b2aaaff381af6b4ccf79">getBestIndividual</a>() {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classSearch.xhtml#a5997e43c8ba27480819f3e6358f984f4">getPopulation</a>()[gb];</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a9be3cc94cce8d67c953ddc17e6fcf84e">  136</a></span>&#160;    <a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a>* <a class="code" href="classHillClimbing.xhtml#a9be3cc94cce8d67c953ddc17e6fcf84e">getBestFitness</a>(){</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classHillClimbing.xhtml#a13d4097b5483b2aaaff381af6b4ccf79">getBestIndividual</a>()-&gt;getFitness();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#a8636abfe54f4628a782dc07f738f36d4">  140</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classHillClimbing.xhtml#a8636abfe54f4628a782dc07f738f36d4">getBestFitness</a>(F* fitness){</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="classHillClimbing.xhtml#a13d4097b5483b2aaaff381af6b4ccf79">getBestIndividual</a>()-&gt;getFitness(fitness);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classHillClimbing.xhtml#acef2d4e793b4377610d6625cba1cf1cc">  144</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classHillClimbing.xhtml#acef2d4e793b4377610d6625cba1cf1cc">getName</a>(){<span class="keywordflow">return</span> <span class="stringliteral">&quot;HillClimbing&quot;</span>;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;};</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* HILLCLIMBING_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="classSearch_xhtml_a5997e43c8ba27480819f3e6358f984f4"><div class="ttname"><a href="classSearch.xhtml#a5997e43c8ba27480819f3e6358f984f4">Search::getPopulation</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; ** getPopulation()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00049">Search.h:49</a></div></div>
<div class="ttc" id="structFitness_xhtml"><div class="ttname"><a href="structFitness.xhtml">Fitness</a></div><div class="ttdoc">This structure represents the fitness (or cost) of one Solution. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00037">Fitness.h:37</a></div></div>
<div class="ttc" id="classSearch_xhtml_ad2d5be608164b67b1fb055b0162f4e88"><div class="ttname"><a href="classSearch.xhtml#ad2d5be608164b67b1fb055b0162f4e88">Search::getSearchSpace</a></div><div class="ttdeci">SearchSpace&lt; P &gt; * getSearchSpace()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00104">Search.h:104</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml"><div class="ttname"><a href="classHillClimbing.xhtml">HillClimbing</a></div><div class="ttdoc">Implementation of the classic Hill Climbing optimization algorithm for TH. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00037">HillClimbing.h:37</a></div></div>
<div class="ttc" id="classPartition_xhtml_a0f3cdf44760e24735951b73dfc9dd3ab"><div class="ttname"><a href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">Partition::getEndPoint</a></div><div class="ttdeci">P getEndPoint()</div><div class="ttdoc">Get the upper bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00107">Partition.h:107</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a9be3cc94cce8d67c953ddc17e6fcf84e"><div class="ttname"><a href="classHillClimbing.xhtml#a9be3cc94cce8d67c953ddc17e6fcf84e">HillClimbing::getBestFitness</a></div><div class="ttdeci">Fitness&lt; F, fSize &gt; * getBestFitness()</div><div class="ttdoc">Get the Fitness for the current best Solution. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00136">HillClimbing.h:136</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a5339276bd6e3c941b1a16c30a7794f1c"><div class="ttname"><a href="classHillClimbing.xhtml#a5339276bd6e3c941b1a16c30a7794f1c">HillClimbing::finalize</a></div><div class="ttdeci">void finalize()</div><div class="ttdoc">Perform the post-optimization process, if required. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00089">HillClimbing.h:89</a></div></div>
<div class="ttc" id="classSearch_xhtml_ab83e643822f70e74ec6ee7e81512c886"><div class="ttname"><a href="classSearch.xhtml#ab83e643822f70e74ec6ee7e81512c886">Search::getPopulationSize</a></div><div class="ttdeci">int getPopulationSize()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00088">Search.h:88</a></div></div>
<div class="ttc" id="classSearch_xhtml_a39d6e69d2b1573ba4564819eeee1cb4e"><div class="ttname"><a href="classSearch.xhtml#a39d6e69d2b1573ba4564819eeee1cb4e">Search::getFitnessPolicy</a></div><div class="ttdeci">FitnessPolicy&lt; P, pSize, F, fSize, V, vSize &gt; * getFitnessPolicy()</div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00100">Search.h:100</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ad95b7150adaf4d576de406c8e7b8142c"><div class="ttname"><a href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a></div><div class="ttdeci">static double randUniformDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00148">THUtil.h:148</a></div></div>
<div class="ttc" id="classRegion_xhtml_a300afb04c957e821d362c358253130b8"><div class="ttname"><a href="classRegion.xhtml#a300afb04c957e821d362c358253130b8">Region::getOriginalDimension</a></div><div class="ttdeci">Dimension&lt; P &gt; * getOriginalDimension(int i)</div><div class="ttdoc">Get the full search space&amp;#39;s Dimension based on its sequential index. </div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00128">Region.h:128</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ac88c9d3a82da43e5afc2cb063d2579ec"><div class="ttname"><a href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a></div><div class="ttdeci">static unsigned int getRandomSeed()</div><div class="ttdoc">Get a random seed. </div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00050">THUtil.h:50</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a4355842a97a5613a57c7b31a0a1c4793"><div class="ttname"><a href="classHillClimbing.xhtml#a4355842a97a5613a57c7b31a0a1c4793">HillClimbing::~HillClimbing</a></div><div class="ttdeci">~HillClimbing()</div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00061">HillClimbing.h:61</a></div></div>
<div class="ttc" id="classFitnessPolicy_xhtml_a069122b137e7a1b9d66e1d026c4e7f1b"><div class="ttname"><a href="classFitnessPolicy.xhtml#a069122b137e7a1b9d66e1d026c4e7f1b">FitnessPolicy::apply</a></div><div class="ttdeci">virtual void apply(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *solution)=0</div><div class="ttdoc">This method calculates the fitness for the Solution instance provided. </div></div>
<div class="ttc" id="classSearchSpace_xhtml"><div class="ttname"><a href="classSearchSpace.xhtml">SearchSpace</a></div><div class="ttdoc">This class represents the entire search space. </div><div class="ttdef"><b>Definition:</b> <a href="SearchSpace_8h_source.xhtml#l00035">SearchSpace.h:35</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a13d4097b5483b2aaaff381af6b4ccf79"><div class="ttname"><a href="classHillClimbing.xhtml#a13d4097b5483b2aaaff381af6b4ccf79">HillClimbing::getBestIndividual</a></div><div class="ttdeci">Solution&lt; P, pSize, F, fSize, V, vSize &gt; * getBestIndividual()</div><div class="ttdoc">Get the best Solution found since the last time the method startup() was called. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00132">HillClimbing.h:132</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_ac41e8c4d1d1319c82732f0d93bb361fd"><div class="ttname"><a href="classHillClimbing.xhtml#ac41e8c4d1d1319c82732f0d93bb361fd">HillClimbing::HillClimbing</a></div><div class="ttdeci">HillClimbing(double percMove, double step, int populationSize)</div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00047">HillClimbing.h:47</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_acef2d4e793b4377610d6625cba1cf1cc"><div class="ttname"><a href="classHillClimbing.xhtml#acef2d4e793b4377610d6625cba1cf1cc">HillClimbing::getName</a></div><div class="ttdeci">const char * getName()</div><div class="ttdoc">Get the name of the optimization method implemented. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00144">HillClimbing.h:144</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_ae2e46d5992ba0b32ede2d00f891ae52d"><div class="ttname"><a href="classHillClimbing.xhtml#ae2e46d5992ba0b32ede2d00f891ae52d">HillClimbing::getBestPos</a></div><div class="ttdeci">int getBestPos()</div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00128">HillClimbing.h:128</a></div></div>
<div class="ttc" id="classFitnessPolicy_xhtml"><div class="ttname"><a href="classFitnessPolicy.xhtml">FitnessPolicy</a></div><div class="ttdoc">Template for the policy that calculates the fitness (or cost) for the problem under optimization...</div><div class="ttdef"><b>Definition:</b> <a href="FitnessPolicy_8h_source.xhtml#l00038">FitnessPolicy.h:38</a></div></div>
<div class="ttc" id="classPartition_xhtml_a418e5b08580b3c1d33390a13eeb8eb0f"><div class="ttname"><a href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">Partition::getStartPoint</a></div><div class="ttdeci">P getStartPoint()</div><div class="ttdoc">Get the lower bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00093">Partition.h:93</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a845d2e4cac39582bf1218a90431c2f3c"><div class="ttname"><a href="classHillClimbing.xhtml#a845d2e4cac39582bf1218a90431c2f3c">HillClimbing::startup</a></div><div class="ttdeci">void startup()</div><div class="ttdoc">Initialize the algorithm for a new optimization. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00066">HillClimbing.h:66</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_afb9bb2d5757df676cc1fe6079d82cad2"><div class="ttname"><a href="classHillClimbing.xhtml#afb9bb2d5757df676cc1fe6079d82cad2">HillClimbing::getCurrentNEvals</a></div><div class="ttdeci">int getCurrentNEvals()</div><div class="ttdoc">Get the number of FitnessPolicy evaluations performed since the last time the method startup() was ca...</div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00130">HillClimbing.h:130</a></div></div>
<div class="ttc" id="classDimension_xhtml"><div class="ttname"><a href="classDimension.xhtml">Dimension</a></div><div class="ttdoc">This class represents the boundaries of a dimension within the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Dimension_8h_source.xhtml#l00033">Dimension.h:33</a></div></div>
<div class="ttc" id="Search_8h_xhtml"><div class="ttname"><a href="Search_8h.xhtml">Search.h</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a8636abfe54f4628a782dc07f738f36d4"><div class="ttname"><a href="classHillClimbing.xhtml#a8636abfe54f4628a782dc07f738f36d4">HillClimbing::getBestFitness</a></div><div class="ttdeci">void getBestFitness(F *fitness)</div><div class="ttdoc">Get the Fitness for the current best Solution. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00140">HillClimbing.h:140</a></div></div>
<div class="ttc" id="classHillClimbing_xhtml_a6361582c1aeab1be7fce4b553530691f"><div class="ttname"><a href="classHillClimbing.xhtml#a6361582c1aeab1be7fce4b553530691f">HillClimbing::isStuck</a></div><div class="ttdeci">bool isStuck()</div><div class="ttdoc">Inform the ConvergenceControlPolicy that no next improvement could be found in reasonable time...</div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00126">HillClimbing.h:126</a></div></div>
<div class="ttc" id="classSolution_xhtml"><div class="ttname"><a href="classSolution.xhtml">Solution</a></div><div class="ttdoc">This class represents a population individual. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00044">Solution.h:44</a></div></div>
<div class="ttc" id="classFitnessPolicy_xhtml_acaf9a99792b12c78eaabc0acadd1de9f"><div class="ttname"><a href="classFitnessPolicy.xhtml#acaf9a99792b12c78eaabc0acadd1de9f">FitnessPolicy::firstIsBetter</a></div><div class="ttdeci">virtual bool firstIsBetter(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *first, Solution&lt; P, pSize, F, fSize, V, vSize &gt; *second)=0</div><div class="ttdoc">Check if the first Solution is better than the second Solution. </div></div>
<div class="ttc" id="classHillClimbing_xhtml_a7c67b745880b93be26eb4fa113f0e37f"><div class="ttname"><a href="classHillClimbing.xhtml#a7c67b745880b93be26eb4fa113f0e37f">HillClimbing::next</a></div><div class="ttdeci">void next(int M)</div><div class="ttdoc">Perform the actual optimization only until the next improvement. </div><div class="ttdef"><b>Definition:</b> <a href="HillClimbing_8h_source.xhtml#l00094">HillClimbing.h:94</a></div></div>
<div class="ttc" id="classSearch_xhtml"><div class="ttname"><a href="classSearch.xhtml">Search</a></div><div class="ttdoc">Template for optimization methods. </div><div class="ttdef"><b>Definition:</b> <a href="Search_8h_source.xhtml#l00041">Search.h:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:30:47 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

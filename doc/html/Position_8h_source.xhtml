<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/Position.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Position.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Position_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifndef POSITION_H_</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#define POSITION_H_</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1&gt;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="structPosition.xhtml">   26</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structPosition.xhtml">Position</a> {</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">   27</a></span>&#160;    P <a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>[pSize];</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">   28</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a> = pSize;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">   30</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">if</span>(position == NULL) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Position can not be empty.&quot;</span>);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">if</span>(size != position-&gt;<a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>) {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(std::string(<span class="stringliteral">&quot;Position&#39;s internal sizes are not compatible [&quot;</span>)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                        + std::to_string(size) + <span class="stringliteral">&quot; != &quot;</span> + std::to_string(position-&gt;<a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>) + <span class="stringliteral">&quot;].&quot;</span>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a83f7d5b691551f2daba6cb46fff57a46">   49</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a83f7d5b691551f2daba6cb46fff57a46">operator =</a>(P *buffer) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            internalPosition[i] = buffer[i];</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a591cf87fe7b6708caec26383103d8cfd">   62</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a83f7d5b691551f2daba6cb46fff57a46">operator =</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position){</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(position);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        *<span class="keyword">this</span> = position-&gt;<a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a7b80895e913c9b5d59e8b71ee7205858">   73</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a83f7d5b691551f2daba6cb46fff57a46">operator =</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> &amp;position){</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(&amp;position);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        *<span class="keyword">this</span> = position.<a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a4fbd10c84ee75c05fedce1ca556f4f88">   83</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a83f7d5b691551f2daba6cb46fff57a46">operator =</a>(P value) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            internalPosition[i] = value;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">   98</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">equals</a>(P *buffer){</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">if</span>(this-&gt;internalPosition[i] != buffer[i]) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structPosition.xhtml#ae49c33a4d51e79c37e9b8b33125f4857">  112</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structPosition.xhtml#ae49c33a4d51e79c37e9b8b33125f4857">equals</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position){</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(position);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">equals</a>(position-&gt;<a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a3d032e44c50a27d25753d11218a9c2e2">  116</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structPosition.xhtml#a3d032e44c50a27d25753d11218a9c2e2">operator ==</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position){</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> position != NULL &amp;&amp; <a class="code" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">equals</a>(position);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a9f64fcb311f390d34d0eb4082bac294b">  119</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structPosition.xhtml#a3d032e44c50a27d25753d11218a9c2e2">operator ==</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> &amp;position){</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> position != NULL &amp;&amp; <a class="code" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">equals</a>(&amp;position);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a90aa25928069f18dd99d3110bf1904b4">  122</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structPosition.xhtml#a90aa25928069f18dd99d3110bf1904b4">operator !=</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position){</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> position == NULL || ! <a class="code" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">equals</a>(position);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structPosition.xhtml#ae40fb34c593cf7b20a06291c6f5b5811">  125</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structPosition.xhtml#a90aa25928069f18dd99d3110bf1904b4">operator !=</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> &amp;position){</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> position == NULL || ! <a class="code" href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">equals</a>(&amp;position);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">  135</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a>(<span class="keywordtype">double</span> value) {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            internalPosition[i] += value;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="structPosition.xhtml#ad93f2806fcb56ca3be1f8b0eda1f6b37">  150</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#ad93f2806fcb56ca3be1f8b0eda1f6b37">sum</a>(P *buffer) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            internalPosition[i] += buffer[i];</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a530f7539f8e0673e484f029c53b412b8">  163</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a530f7539f8e0673e484f029c53b412b8">sum</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(position);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a>(position-&gt;<a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a2aeaf823d70f300b847ce8cb616f192a">  174</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a2aeaf823d70f300b847ce8cb616f192a">sum</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> &amp;position) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a>(&amp;position);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">  184</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">sub</a>(<span class="keywordtype">double</span> value) {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            internalPosition[i] -= value;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a814f63f8a5d25a5b20675928e169f318">  199</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a814f63f8a5d25a5b20675928e169f318">sub</a>(P *buffer) {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            internalPosition[i] -= buffer[i];</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a09bbd5c9bbd247ccd0307a5968a40564">  212</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a09bbd5c9bbd247ccd0307a5968a40564">sub</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position) {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(position);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">sub</a>(position-&gt;<a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a3c83b8c1230dbde60c84301283cf7fdc">  223</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a3c83b8c1230dbde60c84301283cf7fdc">sub</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> &amp;position) {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <a class="code" href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">sub</a>(&amp;position);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">  236</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">mult</a>(<span class="keywordtype">double</span> value) {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            internalPosition[i] *= value;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a73c9e6e75985f419ab44cc4a60c508b4">  251</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a73c9e6e75985f419ab44cc4a60c508b4">mult</a>(P *buffer) {</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            internalPosition[i] *= buffer[i];</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a8cff5fed8bf343eec2689374cb076de1">  264</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a8cff5fed8bf343eec2689374cb076de1">mult</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *position) {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">checkCompatibility</a>(position);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <a class="code" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">mult</a>(position-&gt;<a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    }</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="structPosition.xhtml#af6b3fb56cbfec3b133fcc5fb78a54ebd">  275</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#af6b3fb56cbfec3b133fcc5fb78a54ebd">mult</a>(<a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> &amp;position) {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <a class="code" href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">mult</a>(&amp;position);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a0c70a4890ea8ba9e8b9ed6b4f6030751">  286</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a0c70a4890ea8ba9e8b9ed6b4f6030751">adjustUpperBound</a>(P maxPos) {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keywordflow">if</span>(internalPosition[i] &gt; maxPos) internalPosition[i] = maxPos;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="structPosition.xhtml#aae9a6d862e9da174648a84f876f8d78d">  299</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#aae9a6d862e9da174648a84f876f8d78d">adjustLowerBound</a>(P minPos) {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordflow">if</span>(internalPosition[i] &lt; minPos) internalPosition[i] = minPos;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        }</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="structPosition.xhtml#af5e0d1ae77f5840a090325a7ba9fd8b5">  315</a></span>&#160;    P <a class="code" href="structPosition.xhtml#af5e0d1ae77f5840a090325a7ba9fd8b5">getInternalPosition</a>(<span class="keywordtype">int</span> i){</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">if</span>(i &lt; 0 || i &gt;= pSize) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Invalid index for internal position.&quot;</span>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">return</span> internalPosition[i];</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a807b3e89c1ddc702e0706a159a5c29d7">  324</a></span>&#160;    P* <a class="code" href="structPosition.xhtml#a807b3e89c1ddc702e0706a159a5c29d7">getInternalPosition</a>(){ <span class="keywordflow">return</span> <a class="code" href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">internalPosition</a>; }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a9c2340d3b1f5cb963202db0c9c29cdeb">  334</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structPosition.xhtml#a9c2340d3b1f5cb963202db0c9c29cdeb">getInternalPosition</a>(P *buffer){</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            buffer[i] = internalPosition[i];</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        }</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="structPosition.xhtml#ae2a4b11eb23489170b704f5edc00d334">  348</a></span>&#160;    P <a class="code" href="structPosition.xhtml#ae2a4b11eb23489170b704f5edc00d334">getFirstValue</a>(){ <span class="keywordflow">return</span> internalPosition[0]; }</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a56d15266cecdd63cc07d6ec89f90fb4f">  354</a></span>&#160;    P <a class="code" href="structPosition.xhtml#a56d15266cecdd63cc07d6ec89f90fb4f">getLowerValue</a>() {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        P lower = internalPosition[0];</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=1; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++) {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span>(internalPosition[i] &lt; lower) {</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                lower = internalPosition[i];</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            }</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        }</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">return</span> lower;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    }</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a424b3d5791fcc593c743429e92817982">  368</a></span>&#160;    P <a class="code" href="structPosition.xhtml#a424b3d5791fcc593c743429e92817982">getUpperValue</a>() {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        P upper = internalPosition[0];</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=1; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++) {</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <span class="keywordflow">if</span>(internalPosition[i] &gt; upper) {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                upper = internalPosition[i];</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        }</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordflow">return</span> upper;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    }</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a8f9b5812209642cb31de38d3745cfc16">  386</a></span>&#160;    P <a class="code" href="structPosition.xhtml#a8f9b5812209642cb31de38d3745cfc16">sumInternalValues</a>() {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        P <a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a> = 0;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; i++){</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            sum += internalPosition[i];</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">sum</a>;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    }</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="structPosition.xhtml#a535edee7c99f47e1ace160beceaf1256">  398</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structPosition.xhtml#a535edee7c99f47e1ace160beceaf1256">getPositionSize</a>() { <span class="keywordflow">return</span> <a class="code" href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">size</a>; }</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;};</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* POSITION_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="structPosition_xhtml_a90aa25928069f18dd99d3110bf1904b4"><div class="ttname"><a href="structPosition.xhtml#a90aa25928069f18dd99d3110bf1904b4">Position::operator!=</a></div><div class="ttdeci">bool operator!=(Position&lt; P, pSize &gt; *position)</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00122">Position.h:122</a></div></div>
<div class="ttc" id="structPosition_xhtml_a535edee7c99f47e1ace160beceaf1256"><div class="ttname"><a href="structPosition.xhtml#a535edee7c99f47e1ace160beceaf1256">Position::getPositionSize</a></div><div class="ttdeci">int getPositionSize()</div><div class="ttdoc">Get the number of values that represents a Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00398">Position.h:398</a></div></div>
<div class="ttc" id="structPosition_xhtml_afe6a7e5b5ba96b43714fa94c5eb8f7d5"><div class="ttname"><a href="structPosition.xhtml#afe6a7e5b5ba96b43714fa94c5eb8f7d5">Position::size</a></div><div class="ttdeci">int size</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00028">Position.h:28</a></div></div>
<div class="ttc" id="structPosition_xhtml_aae9a6d862e9da174648a84f876f8d78d"><div class="ttname"><a href="structPosition.xhtml#aae9a6d862e9da174648a84f876f8d78d">Position::adjustLowerBound</a></div><div class="ttdeci">void adjustLowerBound(P minPos)</div><div class="ttdoc">Limit lower the values of this position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00299">Position.h:299</a></div></div>
<div class="ttc" id="structPosition_xhtml_a73c9e6e75985f419ab44cc4a60c508b4"><div class="ttname"><a href="structPosition.xhtml#a73c9e6e75985f419ab44cc4a60c508b4">Position::mult</a></div><div class="ttdeci">void mult(P *buffer)</div><div class="ttdoc">Math method that multiplies the list that represents the Position with the values from the buffer rec...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00251">Position.h:251</a></div></div>
<div class="ttc" id="structPosition_xhtml_ad93f2806fcb56ca3be1f8b0eda1f6b37"><div class="ttname"><a href="structPosition.xhtml#ad93f2806fcb56ca3be1f8b0eda1f6b37">Position::sum</a></div><div class="ttdeci">void sum(P *buffer)</div><div class="ttdoc">Math method that sums the list that represents the Position with the values from the buffer received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00150">Position.h:150</a></div></div>
<div class="ttc" id="structPosition_xhtml_a09bbd5c9bbd247ccd0307a5968a40564"><div class="ttname"><a href="structPosition.xhtml#a09bbd5c9bbd247ccd0307a5968a40564">Position::sub</a></div><div class="ttdeci">void sub(Position&lt; P, pSize &gt; *position)</div><div class="ttdoc">Math method that subtracts the list that represents the Position from Position instance received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00212">Position.h:212</a></div></div>
<div class="ttc" id="structPosition_xhtml_a161444b6ea70afe4cfc7bdd81678105c"><div class="ttname"><a href="structPosition.xhtml#a161444b6ea70afe4cfc7bdd81678105c">Position::mult</a></div><div class="ttdeci">void mult(double value)</div><div class="ttdoc">Math method that multiplies (individually) each value in the list that represents the Position with t...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00236">Position.h:236</a></div></div>
<div class="ttc" id="structPosition_xhtml_a83f7d5b691551f2daba6cb46fff57a46"><div class="ttname"><a href="structPosition.xhtml#a83f7d5b691551f2daba6cb46fff57a46">Position::operator=</a></div><div class="ttdeci">void operator=(P *buffer)</div><div class="ttdoc">Operator that assigns the values of a buffer to the list that represents the current Position...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00049">Position.h:49</a></div></div>
<div class="ttc" id="structPosition_xhtml_a16cc1f2b7a03ca527033e3215577f374"><div class="ttname"><a href="structPosition.xhtml#a16cc1f2b7a03ca527033e3215577f374">Position::internalPosition</a></div><div class="ttdeci">P internalPosition[pSize]</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00027">Position.h:27</a></div></div>
<div class="ttc" id="structPosition_xhtml_ac9d8d79414e34bd4486b8fc047cdb5bd"><div class="ttname"><a href="structPosition.xhtml#ac9d8d79414e34bd4486b8fc047cdb5bd">Position::checkCompatibility</a></div><div class="ttdeci">void checkCompatibility(Position&lt; P, pSize &gt; *position)</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00030">Position.h:30</a></div></div>
<div class="ttc" id="structPosition_xhtml_ae49c33a4d51e79c37e9b8b33125f4857"><div class="ttname"><a href="structPosition.xhtml#ae49c33a4d51e79c37e9b8b33125f4857">Position::equals</a></div><div class="ttdeci">bool equals(Position&lt; P, pSize &gt; *position)</div><div class="ttdoc">Compares the current position with the position received. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00112">Position.h:112</a></div></div>
<div class="ttc" id="structPosition_xhtml_a3c83b8c1230dbde60c84301283cf7fdc"><div class="ttname"><a href="structPosition.xhtml#a3c83b8c1230dbde60c84301283cf7fdc">Position::sub</a></div><div class="ttdeci">void sub(Position&lt; P, pSize &gt; &amp;position)</div><div class="ttdoc">Math method that subtracts the list that represents the Position from Position instance received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00223">Position.h:223</a></div></div>
<div class="ttc" id="structPosition_xhtml_a4099812c9395b6dbe03ca8d25f7ae7fc"><div class="ttname"><a href="structPosition.xhtml#a4099812c9395b6dbe03ca8d25f7ae7fc">Position::sub</a></div><div class="ttdeci">void sub(double value)</div><div class="ttdoc">Math method that subtracts the value received from each value in the list that represents the Positio...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00184">Position.h:184</a></div></div>
<div class="ttc" id="structPosition_xhtml_a3d032e44c50a27d25753d11218a9c2e2"><div class="ttname"><a href="structPosition.xhtml#a3d032e44c50a27d25753d11218a9c2e2">Position::operator==</a></div><div class="ttdeci">bool operator==(Position&lt; P, pSize &gt; *position)</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00116">Position.h:116</a></div></div>
<div class="ttc" id="structPosition_xhtml_a56d15266cecdd63cc07d6ec89f90fb4f"><div class="ttname"><a href="structPosition.xhtml#a56d15266cecdd63cc07d6ec89f90fb4f">Position::getLowerValue</a></div><div class="ttdeci">P getLowerValue()</div><div class="ttdoc">Get the lower value from the list of values that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00354">Position.h:354</a></div></div>
<div class="ttc" id="structPosition_xhtml_a8cff5fed8bf343eec2689374cb076de1"><div class="ttname"><a href="structPosition.xhtml#a8cff5fed8bf343eec2689374cb076de1">Position::mult</a></div><div class="ttdeci">void mult(Position&lt; P, pSize &gt; *position)</div><div class="ttdoc">Math method that multiplies the list that represents the Position with Position instance received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00264">Position.h:264</a></div></div>
<div class="ttc" id="structPosition_xhtml_a530f7539f8e0673e484f029c53b412b8"><div class="ttname"><a href="structPosition.xhtml#a530f7539f8e0673e484f029c53b412b8">Position::sum</a></div><div class="ttdeci">void sum(Position&lt; P, pSize &gt; *position)</div><div class="ttdoc">Math method that sums the list that represents the Position with Position instance received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00163">Position.h:163</a></div></div>
<div class="ttc" id="structPosition_xhtml_a0c70a4890ea8ba9e8b9ed6b4f6030751"><div class="ttname"><a href="structPosition.xhtml#a0c70a4890ea8ba9e8b9ed6b4f6030751">Position::adjustUpperBound</a></div><div class="ttdeci">void adjustUpperBound(P maxPos)</div><div class="ttdoc">Limit upper the values of this position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00286">Position.h:286</a></div></div>
<div class="ttc" id="structPosition_xhtml_ae2a4b11eb23489170b704f5edc00d334"><div class="ttname"><a href="structPosition.xhtml#ae2a4b11eb23489170b704f5edc00d334">Position::getFirstValue</a></div><div class="ttdeci">P getFirstValue()</div><div class="ttdoc">Get the first value from the list of values that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00348">Position.h:348</a></div></div>
<div class="ttc" id="structPosition_xhtml_a8f9b5812209642cb31de38d3745cfc16"><div class="ttname"><a href="structPosition.xhtml#a8f9b5812209642cb31de38d3745cfc16">Position::sumInternalValues</a></div><div class="ttdeci">P sumInternalValues()</div><div class="ttdoc">Get the sum of values from the list that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00386">Position.h:386</a></div></div>
<div class="ttc" id="structPosition_xhtml_a2aeaf823d70f300b847ce8cb616f192a"><div class="ttname"><a href="structPosition.xhtml#a2aeaf823d70f300b847ce8cb616f192a">Position::sum</a></div><div class="ttdeci">void sum(Position&lt; P, pSize &gt; &amp;position)</div><div class="ttdoc">Math method that sums the list that represents the Position with Position instance received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00174">Position.h:174</a></div></div>
<div class="ttc" id="structPosition_xhtml_a9c2340d3b1f5cb963202db0c9c29cdeb"><div class="ttname"><a href="structPosition.xhtml#a9c2340d3b1f5cb963202db0c9c29cdeb">Position::getInternalPosition</a></div><div class="ttdeci">void getInternalPosition(P *buffer)</div><div class="ttdoc">This method copies the contents of current Position to the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00334">Position.h:334</a></div></div>
<div class="ttc" id="structPosition_xhtml_a424b3d5791fcc593c743429e92817982"><div class="ttname"><a href="structPosition.xhtml#a424b3d5791fcc593c743429e92817982">Position::getUpperValue</a></div><div class="ttdeci">P getUpperValue()</div><div class="ttdoc">Get the upper value from the list of values that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00368">Position.h:368</a></div></div>
<div class="ttc" id="structPosition_xhtml_af78cd02c57904a56e97393857b8765eb"><div class="ttname"><a href="structPosition.xhtml#af78cd02c57904a56e97393857b8765eb">Position::equals</a></div><div class="ttdeci">bool equals(P *buffer)</div><div class="ttdoc">Compares the current position with the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00098">Position.h:98</a></div></div>
<div class="ttc" id="structPosition_xhtml_a807b3e89c1ddc702e0706a159a5c29d7"><div class="ttname"><a href="structPosition.xhtml#a807b3e89c1ddc702e0706a159a5c29d7">Position::getInternalPosition</a></div><div class="ttdeci">P * getInternalPosition()</div><div class="ttdoc">Get a pointer to the actual list of values that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00324">Position.h:324</a></div></div>
<div class="ttc" id="structPosition_xhtml"><div class="ttname"><a href="structPosition.xhtml">Position</a></div><div class="ttdoc">This structure represents one location within 1-dimension of the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00026">Position.h:26</a></div></div>
<div class="ttc" id="structPosition_xhtml_a11256d014f2958d21a1198676208df33"><div class="ttname"><a href="structPosition.xhtml#a11256d014f2958d21a1198676208df33">Position::sum</a></div><div class="ttdeci">void sum(double value)</div><div class="ttdoc">Math method that sums (individually) each value in the list that represents the Position with the val...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00135">Position.h:135</a></div></div>
<div class="ttc" id="structPosition_xhtml_af6b3fb56cbfec3b133fcc5fb78a54ebd"><div class="ttname"><a href="structPosition.xhtml#af6b3fb56cbfec3b133fcc5fb78a54ebd">Position::mult</a></div><div class="ttdeci">void mult(Position&lt; P, pSize &gt; &amp;position)</div><div class="ttdoc">Math method that multiplies the list that represents the Position with Position instance received...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00275">Position.h:275</a></div></div>
<div class="ttc" id="structPosition_xhtml_a814f63f8a5d25a5b20675928e169f318"><div class="ttname"><a href="structPosition.xhtml#a814f63f8a5d25a5b20675928e169f318">Position::sub</a></div><div class="ttdeci">void sub(P *buffer)</div><div class="ttdoc">Math method that subtracts the values of the buffer received from the list that represents the Positi...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00199">Position.h:199</a></div></div>
<div class="ttc" id="structPosition_xhtml_af5e0d1ae77f5840a090325a7ba9fd8b5"><div class="ttname"><a href="structPosition.xhtml#af5e0d1ae77f5840a090325a7ba9fd8b5">Position::getInternalPosition</a></div><div class="ttdeci">P getInternalPosition(int i)</div><div class="ttdoc">Get a partial position based on its index in the list of values that represents the actual Position...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00315">Position.h:315</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Oct 7 2020 13:08:19 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

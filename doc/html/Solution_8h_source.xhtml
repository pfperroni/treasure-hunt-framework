<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/Solution.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Solution.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Solution_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#ifndef SOLUTION_H_</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#define SOLUTION_H_</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ConstraintViolation_8h.xhtml">ConstraintViolation.h</a>&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Position_8h.xhtml">Position.h</a>&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Fitness_8h.xhtml">Fitness.h</a>&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Region_8h.xhtml">Region.h</a>&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="THUtil_8h.xhtml">THUtil.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;mpi.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> P = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> pSize = 1, <span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1, <span class="keyword">class</span> V = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> vSize = 1&gt;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classSolution.xhtml">   29</a></span>&#160;<span class="keyword">class </span><a class="code" href="classSolution.xhtml">Solution</a> {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *positions;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> fitness;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="structConstraintViolation.xhtml">ConstraintViolation&lt;V, vSize&gt;</a> violation;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">int</span> n;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> seed;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">void</span> setup(<span class="keywordtype">int</span> nDimensions) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> (nDimensions &lt;= 0) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The number of dimensions must be greater than zero.&quot;</span>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        n = nDimensions;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        positions = <span class="keyword">new</span> <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a>[n];</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        seed = <a class="code" href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a>();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">void</span> checkCompatibility(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution) {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">if</span>(solution == NULL) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Solution can not be empty.&quot;</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">if</span>(n != solution-&gt;n) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(std::string(<span class="stringliteral">&quot;Solution&#39;s internal sizes are not compatible [&quot;</span>)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                        + std::to_string(n) + <span class="stringliteral">&quot; != &quot;</span> + std::to_string(solution-&gt;n) + <span class="stringliteral">&quot;].&quot;</span>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classSolution.xhtml#aed3a2146c95b8f8f06cecf9980e77c20">   58</a></span>&#160;    <a class="code" href="classSolution.xhtml#aed3a2146c95b8f8f06cecf9980e77c20">Solution</a>(<span class="keywordtype">int</span> nDimensions) {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        setup(nDimensions);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a763a8e70b722bb0679046d8c8b8223e5">   67</a></span>&#160;    <a class="code" href="classSolution.xhtml#a763a8e70b722bb0679046d8c8b8223e5">Solution</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution) { <span class="comment">// @suppress(&quot;Class members should be properly initialized&quot;)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">if</span> (solution == NULL) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The original solution is empty.&quot;</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        setup(solution-&gt;<a class="code" href="classSolution.xhtml#ad5b8c8ce272efaada80e93b0e097d1cd">getNDimensions</a>());</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        *<span class="keyword">this</span> = solution;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classSolution.xhtml#afd40b1d7d953e0dde4a02d22f19079ad">   72</a></span>&#160;    <a class="code" href="classSolution.xhtml#afd40b1d7d953e0dde4a02d22f19079ad">~Solution</a>() {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">delete</span> positions;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a8943fc57439d7e23ffb4cc4c49ae106e">   84</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a8943fc57439d7e23ffb4cc4c49ae106e">operator =</a>(P *buffer) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">if</span> (buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0, ptr=0; i &lt; n; i++, ptr+=pSize) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            positions[i] = &amp;buffer[ptr];</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a1eb06ad9c9e36af504d84c9d3c611f21">   98</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a8943fc57439d7e23ffb4cc4c49ae106e">operator =</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        checkCompatibility(solution);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        this-&gt;n = solution-&gt;n;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; solution-&gt;n; i++) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            this-&gt;positions[i] = solution-&gt;positions[i];</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        this-&gt;fitness = solution-&gt;fitness;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        this-&gt;violation = solution-&gt;violation;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classSolution.xhtml#af6f35f821332bc9414773fd659a6a29b">  108</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a8943fc57439d7e23ffb4cc4c49ae106e">operator =</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> &amp;solution) {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        *<span class="keyword">this</span> = &amp;solution;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">  119</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">equals</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution) {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        checkCompatibility(solution);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span> (this-&gt;n != solution-&gt;n) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; solution-&gt;n; i++) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">if</span> (this-&gt;positions[i] != solution-&gt;positions[i]) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">if</span> (this-&gt;fitness != solution-&gt;fitness) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">if</span> (this-&gt;violation != solution-&gt;violation) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a7681f8c7d0c20381203276c7b9a26374">  129</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSolution.xhtml#a7681f8c7d0c20381203276c7b9a26374">operator ==</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">return</span> solution != NULL &amp;&amp; <a class="code" href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">equals</a>(solution);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a861971bd3294c0389871abd13d2a9427">  132</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSolution.xhtml#a7681f8c7d0c20381203276c7b9a26374">operator ==</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> &amp;solution) {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> solution != NULL &amp;&amp; <a class="code" href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">equals</a>(&amp;solution);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a4f0ac3c5f908538e65e4498d1061d156">  135</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSolution.xhtml#a4f0ac3c5f908538e65e4498d1061d156">operator !=</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *solution) {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> solution == NULL || ! <a class="code" href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">equals</a>(solution);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a225d6e8e5470be0f3f8bb6abc1a16782">  138</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSolution.xhtml#a4f0ac3c5f908538e65e4498d1061d156">operator !=</a>(<a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> &amp;solution) {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">return</span> solution == NULL || ! <a class="code" href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">equals</a>(&amp;solution);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classSolution.xhtml#ad783c91ad12c21e861a4639e72c4fd50">  150</a></span>&#160;    <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a>* <a class="code" href="classSolution.xhtml#ad783c91ad12c21e861a4639e72c4fd50">operator []</a>(<span class="keywordtype">int</span> i) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classSolution.xhtml#acddbe4cdda346908a7b46cde53af32b6">getPosition</a>(i);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classSolution.xhtml#acddbe4cdda346908a7b46cde53af32b6">  162</a></span>&#160;    <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a>* <a class="code" href="classSolution.xhtml#acddbe4cdda346908a7b46cde53af32b6">getPosition</a>(<span class="keywordtype">int</span> i) {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> (i &lt; 0 || i &gt;= n) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(std::string(<span class="stringliteral">&quot;Invalid index for solution [&quot;</span>)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                                    + std::to_string(i) + <span class="stringliteral">&quot;].&quot;</span>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> &amp;positions[i];</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classSolution.xhtml#acaffcea4a5bfc0ad8ef8d655f56533b6">  178</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#acaffcea4a5bfc0ad8ef8d655f56533b6">getPositions</a>(P *buffer) {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">if</span> (buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0, ptr = 0; i &lt; n; i++, ptr+=pSize) {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            positions[i].<a class="code" href="structPosition.xhtml#af5e0d1ae77f5840a090325a7ba9fd8b5">getInternalPosition</a>(&amp;buffer[ptr]);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classSolution.xhtml#ae7720fedccf4ae8ff24170e159fd266f">  189</a></span>&#160;    <a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a>* <a class="code" href="classSolution.xhtml#ae7720fedccf4ae8ff24170e159fd266f">getFitness</a>() {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> &amp;fitness;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a559e603f729926a7be428906227b4dec">  201</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a559e603f729926a7be428906227b4dec">getFitness</a>(F *buffer) {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span> (buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        fitness.<a class="code" href="structFitness.xhtml#a50bf7f366d9e182293184ebee7297df1">getInternalFitness</a>(buffer);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a6c38d7e27c91077d67460a62aed71e06">  214</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a6c38d7e27c91077d67460a62aed71e06">setFitness</a>(F *buffer) {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        this-&gt;fitness = buffer;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a06a103b71be515e1835c65abdf3dcb35">  222</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a06a103b71be515e1835c65abdf3dcb35">setFitness</a>(F value) {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        this-&gt;fitness = value;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    }</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a38a1110b2b585a6e7f2dc4210df0d536">  230</a></span>&#160;    <a class="code" href="structConstraintViolation.xhtml">ConstraintViolation&lt;V, vSize&gt;</a>* <a class="code" href="classSolution.xhtml#a38a1110b2b585a6e7f2dc4210df0d536">getViolation</a>() {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">return</span> &amp;violation;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a6f8e92e6e412b9f2056c18c37c04da2d">  242</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a6f8e92e6e412b9f2056c18c37c04da2d">getViolation</a>(V *buffer) {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">if</span> (buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        fitness.getInternalViolation(buffer);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classSolution.xhtml#aad908f750b12ec590878684f042c23ce">  255</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#aad908f750b12ec590878684f042c23ce">setViolation</a>(V *buffer) {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        this-&gt;violation = buffer;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a8f2b530ec087ff9e62ef00300f6cb17e">  263</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a8f2b530ec087ff9e62ef00300f6cb17e">setViolation</a>(F value) {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        this-&gt;violation = value;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classSolution.xhtml#a84c713b707a570add53e85a28196bb3e">  279</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSolution.xhtml#a84c713b707a570add53e85a28196bb3e">reset</a>(<a class="code" href="classRegion.xhtml">Region&lt;P&gt;</a> *r, <a class="code" href="classSolution.xhtml">Solution&lt;P, pSize, F, fSize, V, vSize&gt;</a> *bias = NULL) {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">if</span> (r == NULL) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Region cannot be null.&quot;</span>);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        map&lt;int, Dimension&lt;P&gt;*&gt; *originalDimensions = r-&gt;<a class="code" href="classRegion.xhtml#aed7a4120591db745b5b424fb94588294">getOriginalDimensions</a>();</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">if</span> (n != (<span class="keywordtype">int</span>) originalDimensions-&gt;size()) {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The number of dimensions does not match.&quot;</span>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        map&lt;Dimension&lt;P&gt;*, <a class="code" href="classPartition.xhtml">Partition&lt;P&gt;</a>*&gt; *partitions = r-&gt;<a class="code" href="classRegion.xhtml#a07c792e7ab2768254d71a0b688ccd935">getPartitions</a>();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <a class="code" href="classPartition.xhtml">Partition&lt;P&gt;</a> *partition;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="structPosition.xhtml">Position&lt;P, pSize&gt;</a> *pos;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; n; i++) {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="comment">// Use originalDimensions to map the correct sequence of dimensions on partitions.</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            partition = (*partitions)[(*originalDimensions)[i]];</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">if</span>(bias != NULL) { <span class="comment">// If a bias is provided.</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                pos = (*bias)[i];</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                <span class="keywordflow">if</span>(<a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, 0, 1) &lt; 0.5) { <span class="comment">// For half of the dimensions:</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    <span class="comment">// Reset close to the bias.</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                    positions[i] = <a class="code" href="classTHUtil.xhtml#a1961a690dfec7f0dab0be849d31828ea">THUtil::randNormalDouble</a>(seed, pos-&gt;<a class="code" href="structPosition.xhtml#a56d15266cecdd63cc07d6ec89f90fb4f">getLowerValue</a>()*0.99, pos-&gt;<a class="code" href="structPosition.xhtml#a424b3d5791fcc593c743429e92817982">getUpperValue</a>()*1.01);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                } <span class="comment">// For the other half:</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keywordflow">else</span> positions[i] = pos; <span class="comment">// Reset exactly on the same position as the bias.</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">else</span> { <span class="comment">// If no bias is provides:</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="comment">// Reset to a random position within original &quot;anchor&quot; sub-region.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                positions[i] = <a class="code" href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a>(seed, partition-&gt;<a class="code" href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">getStartPoint</a>(), partition-&gt;<a class="code" href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">getEndPoint</a>());</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="comment">// Make sure the new position is inside the boundaries.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            positions[i].<a class="code" href="structPosition.xhtml#a0c70a4890ea8ba9e8b9ed6b4f6030751">adjustUpperBound</a>(partition-&gt;<a class="code" href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">getEndPoint</a>());</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            positions[i].<a class="code" href="structPosition.xhtml#aae9a6d862e9da174648a84f876f8d78d">adjustLowerBound</a>(partition-&gt;<a class="code" href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">getStartPoint</a>());</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="classSolution.xhtml#ad5b8c8ce272efaada80e93b0e097d1cd">  314</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classSolution.xhtml#ad5b8c8ce272efaada80e93b0e097d1cd">getNDimensions</a>() {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordflow">return</span> n;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    }</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;};</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SOLUTION_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="structFitness_xhtml"><div class="ttname"><a href="structFitness.xhtml">Fitness</a></div><div class="ttdoc">This structure represents the fitness (or cost) of one Solution. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00022">Fitness.h:22</a></div></div>
<div class="ttc" id="structPosition_xhtml_aae9a6d862e9da174648a84f876f8d78d"><div class="ttname"><a href="structPosition.xhtml#aae9a6d862e9da174648a84f876f8d78d">Position::adjustLowerBound</a></div><div class="ttdeci">void adjustLowerBound(P minPos)</div><div class="ttdoc">Limit lower the values of this position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00299">Position.h:299</a></div></div>
<div class="ttc" id="classSolution_xhtml_a38a1110b2b585a6e7f2dc4210df0d536"><div class="ttname"><a href="classSolution.xhtml#a38a1110b2b585a6e7f2dc4210df0d536">Solution::getViolation</a></div><div class="ttdeci">ConstraintViolation&lt; V, vSize &gt; * getViolation()</div><div class="ttdoc">Get a pointer to the actual ConstraintViolation instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00230">Solution.h:230</a></div></div>
<div class="ttc" id="THUtil_8h_xhtml"><div class="ttname"><a href="THUtil_8h.xhtml">THUtil.h</a></div></div>
<div class="ttc" id="classPartition_xhtml_a0f3cdf44760e24735951b73dfc9dd3ab"><div class="ttname"><a href="classPartition.xhtml#a0f3cdf44760e24735951b73dfc9dd3ab">Partition::getEndPoint</a></div><div class="ttdeci">P getEndPoint()</div><div class="ttdoc">Get the upper bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00092">Partition.h:92</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_a1961a690dfec7f0dab0be849d31828ea"><div class="ttname"><a href="classTHUtil.xhtml#a1961a690dfec7f0dab0be849d31828ea">THUtil::randNormalDouble</a></div><div class="ttdeci">static double randNormalDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00136">THUtil.h:136</a></div></div>
<div class="ttc" id="classSolution_xhtml_ae7720fedccf4ae8ff24170e159fd266f"><div class="ttname"><a href="classSolution.xhtml#ae7720fedccf4ae8ff24170e159fd266f">Solution::getFitness</a></div><div class="ttdeci">Fitness&lt; F, fSize &gt; * getFitness()</div><div class="ttdoc">Get a pointer to the actual Fitness instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00189">Solution.h:189</a></div></div>
<div class="ttc" id="classRegion_xhtml_aed7a4120591db745b5b424fb94588294"><div class="ttname"><a href="classRegion.xhtml#aed7a4120591db745b5b424fb94588294">Region::getOriginalDimensions</a></div><div class="ttdeci">map&lt; int, Dimension&lt; P &gt; * &gt; * getOriginalDimensions()</div><div class="ttdoc">Obtains a pointer to the map containing the dimensions that compose the entire search space...</div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00101">Region.h:101</a></div></div>
<div class="ttc" id="classRegion_xhtml"><div class="ttname"><a href="classRegion.xhtml">Region</a></div><div class="ttdoc">This class represents a region within the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00028">Region.h:28</a></div></div>
<div class="ttc" id="classSolution_xhtml_a84c713b707a570add53e85a28196bb3e"><div class="ttname"><a href="classSolution.xhtml#a84c713b707a570add53e85a28196bb3e">Solution::reset</a></div><div class="ttdeci">void reset(Region&lt; P &gt; *r, Solution&lt; P, pSize, F, fSize, V, vSize &gt; *bias=NULL)</div><div class="ttdoc">Reset the position of the current Solution in the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00279">Solution.h:279</a></div></div>
<div class="ttc" id="classSolution_xhtml_aed3a2146c95b8f8f06cecf9980e77c20"><div class="ttname"><a href="classSolution.xhtml#aed3a2146c95b8f8f06cecf9980e77c20">Solution::Solution</a></div><div class="ttdeci">Solution(int nDimensions)</div><div class="ttdoc">This constructor creates an empty Solution instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00058">Solution.h:58</a></div></div>
<div class="ttc" id="classSolution_xhtml_a8943fc57439d7e23ffb4cc4c49ae106e"><div class="ttname"><a href="classSolution.xhtml#a8943fc57439d7e23ffb4cc4c49ae106e">Solution::operator=</a></div><div class="ttdeci">void operator=(P *buffer)</div><div class="ttdoc">This operator overrides the solution&amp;#39;s Position with the contents of the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00084">Solution.h:84</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ad95b7150adaf4d576de406c8e7b8142c"><div class="ttname"><a href="classTHUtil.xhtml#ad95b7150adaf4d576de406c8e7b8142c">THUtil::randUniformDouble</a></div><div class="ttdeci">static double randUniformDouble(unsigned int &amp;seed, double a, double b)</div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00133">THUtil.h:133</a></div></div>
<div class="ttc" id="Fitness_8h_xhtml"><div class="ttname"><a href="Fitness_8h.xhtml">Fitness.h</a></div></div>
<div class="ttc" id="classSolution_xhtml_a06a103b71be515e1835c65abdf3dcb35"><div class="ttname"><a href="classSolution.xhtml#a06a103b71be515e1835c65abdf3dcb35">Solution::setFitness</a></div><div class="ttdeci">void setFitness(F value)</div><div class="ttdoc">Assigns the same value to all elements of the Fitness instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00222">Solution.h:222</a></div></div>
<div class="ttc" id="classPartition_xhtml"><div class="ttname"><a href="classPartition.xhtml">Partition</a></div><div class="ttdoc">This class represents an interval within dimension&amp;#39;s boundaries. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00018">Partition.h:18</a></div></div>
<div class="ttc" id="classSolution_xhtml_ad5b8c8ce272efaada80e93b0e097d1cd"><div class="ttname"><a href="classSolution.xhtml#ad5b8c8ce272efaada80e93b0e097d1cd">Solution::getNDimensions</a></div><div class="ttdeci">int getNDimensions()</div><div class="ttdoc">Get the number of dimensions of this Solution instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00314">Solution.h:314</a></div></div>
<div class="ttc" id="classSolution_xhtml_a763a8e70b722bb0679046d8c8b8223e5"><div class="ttname"><a href="classSolution.xhtml#a763a8e70b722bb0679046d8c8b8223e5">Solution::Solution</a></div><div class="ttdeci">Solution(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *solution)</div><div class="ttdoc">This constructor creates a Solution instance by copying all contents of another Solution instance...</div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00067">Solution.h:67</a></div></div>
<div class="ttc" id="classTHUtil_xhtml_ac88c9d3a82da43e5afc2cb063d2579ec"><div class="ttname"><a href="classTHUtil.xhtml#ac88c9d3a82da43e5afc2cb063d2579ec">THUtil::getRandomSeed</a></div><div class="ttdeci">static unsigned int getRandomSeed()</div><div class="ttdoc">Get a random seed. </div><div class="ttdef"><b>Definition:</b> <a href="THUtil_8h_source.xhtml#l00035">THUtil.h:35</a></div></div>
<div class="ttc" id="classPartition_xhtml_a418e5b08580b3c1d33390a13eeb8eb0f"><div class="ttname"><a href="classPartition.xhtml#a418e5b08580b3c1d33390a13eeb8eb0f">Partition::getStartPoint</a></div><div class="ttdeci">P getStartPoint()</div><div class="ttdoc">Get the lower bound for this partition. </div><div class="ttdef"><b>Definition:</b> <a href="Partition_8h_source.xhtml#l00078">Partition.h:78</a></div></div>
<div class="ttc" id="structConstraintViolation_xhtml"><div class="ttname"><a href="structConstraintViolation.xhtml">ConstraintViolation</a></div><div class="ttdoc">This structure represents the constraints violated by one Solution. </div><div class="ttdef"><b>Definition:</b> <a href="ConstraintViolation_8h_source.xhtml#l00021">ConstraintViolation.h:21</a></div></div>
<div class="ttc" id="structPosition_xhtml_a56d15266cecdd63cc07d6ec89f90fb4f"><div class="ttname"><a href="structPosition.xhtml#a56d15266cecdd63cc07d6ec89f90fb4f">Position::getLowerValue</a></div><div class="ttdeci">P getLowerValue()</div><div class="ttdoc">Get the lower value from the list of values that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00354">Position.h:354</a></div></div>
<div class="ttc" id="Position_8h_xhtml"><div class="ttname"><a href="Position_8h.xhtml">Position.h</a></div></div>
<div class="ttc" id="classSolution_xhtml_acaffcea4a5bfc0ad8ef8d655f56533b6"><div class="ttname"><a href="classSolution.xhtml#acaffcea4a5bfc0ad8ef8d655f56533b6">Solution::getPositions</a></div><div class="ttdeci">void getPositions(P *buffer)</div><div class="ttdoc">This method copies the contents of current Position to the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00178">Solution.h:178</a></div></div>
<div class="ttc" id="classSolution_xhtml_a6f8e92e6e412b9f2056c18c37c04da2d"><div class="ttname"><a href="classSolution.xhtml#a6f8e92e6e412b9f2056c18c37c04da2d">Solution::getViolation</a></div><div class="ttdeci">void getViolation(V *buffer)</div><div class="ttdoc">This method copies the contents of current ConstraintViolation to the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00242">Solution.h:242</a></div></div>
<div class="ttc" id="classSolution_xhtml_acddbe4cdda346908a7b46cde53af32b6"><div class="ttname"><a href="classSolution.xhtml#acddbe4cdda346908a7b46cde53af32b6">Solution::getPosition</a></div><div class="ttdeci">Position&lt; P, pSize &gt; * getPosition(int i)</div><div class="ttdoc">Get a Position based on its index in the list of positions. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00162">Solution.h:162</a></div></div>
<div class="ttc" id="classSolution_xhtml_afd40b1d7d953e0dde4a02d22f19079ad"><div class="ttname"><a href="classSolution.xhtml#afd40b1d7d953e0dde4a02d22f19079ad">Solution::~Solution</a></div><div class="ttdeci">~Solution()</div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00072">Solution.h:72</a></div></div>
<div class="ttc" id="classSolution_xhtml_aad908f750b12ec590878684f042c23ce"><div class="ttname"><a href="classSolution.xhtml#aad908f750b12ec590878684f042c23ce">Solution::setViolation</a></div><div class="ttdeci">void setViolation(V *buffer)</div><div class="ttdoc">Assigns the values of the buffer received to the current ConstraintViolation instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00255">Solution.h:255</a></div></div>
<div class="ttc" id="structPosition_xhtml_a0c70a4890ea8ba9e8b9ed6b4f6030751"><div class="ttname"><a href="structPosition.xhtml#a0c70a4890ea8ba9e8b9ed6b4f6030751">Position::adjustUpperBound</a></div><div class="ttdeci">void adjustUpperBound(P maxPos)</div><div class="ttdoc">Limit upper the values of this position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00286">Position.h:286</a></div></div>
<div class="ttc" id="classSolution_xhtml_a559e603f729926a7be428906227b4dec"><div class="ttname"><a href="classSolution.xhtml#a559e603f729926a7be428906227b4dec">Solution::getFitness</a></div><div class="ttdeci">void getFitness(F *buffer)</div><div class="ttdoc">This method copies the contents of current Fitness to the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00201">Solution.h:201</a></div></div>
<div class="ttc" id="Region_8h_xhtml"><div class="ttname"><a href="Region_8h.xhtml">Region.h</a></div></div>
<div class="ttc" id="classSolution_xhtml_a4f0ac3c5f908538e65e4498d1061d156"><div class="ttname"><a href="classSolution.xhtml#a4f0ac3c5f908538e65e4498d1061d156">Solution::operator!=</a></div><div class="ttdeci">bool operator!=(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *solution)</div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00135">Solution.h:135</a></div></div>
<div class="ttc" id="classSolution_xhtml_a38c4ef92e86f28e3dbbc2a77afd356d4"><div class="ttname"><a href="classSolution.xhtml#a38c4ef92e86f28e3dbbc2a77afd356d4">Solution::equals</a></div><div class="ttdeci">bool equals(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *solution)</div><div class="ttdoc">Compares the current solution with the solution received. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00119">Solution.h:119</a></div></div>
<div class="ttc" id="classSolution_xhtml_a6c38d7e27c91077d67460a62aed71e06"><div class="ttname"><a href="classSolution.xhtml#a6c38d7e27c91077d67460a62aed71e06">Solution::setFitness</a></div><div class="ttdeci">void setFitness(F *buffer)</div><div class="ttdoc">Assigns the values of the buffer received to the current Fitness instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00214">Solution.h:214</a></div></div>
<div class="ttc" id="classSolution_xhtml_a8f2b530ec087ff9e62ef00300f6cb17e"><div class="ttname"><a href="classSolution.xhtml#a8f2b530ec087ff9e62ef00300f6cb17e">Solution::setViolation</a></div><div class="ttdeci">void setViolation(F value)</div><div class="ttdoc">Assigns the same value to all elements of the ConstraintViolation instance. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00263">Solution.h:263</a></div></div>
<div class="ttc" id="classSolution_xhtml"><div class="ttname"><a href="classSolution.xhtml">Solution</a></div><div class="ttdoc">This class represents a population individual. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00029">Solution.h:29</a></div></div>
<div class="ttc" id="structPosition_xhtml_a424b3d5791fcc593c743429e92817982"><div class="ttname"><a href="structPosition.xhtml#a424b3d5791fcc593c743429e92817982">Position::getUpperValue</a></div><div class="ttdeci">P getUpperValue()</div><div class="ttdoc">Get the upper value from the list of values that represents the Position. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00368">Position.h:368</a></div></div>
<div class="ttc" id="ConstraintViolation_8h_xhtml"><div class="ttname"><a href="ConstraintViolation_8h.xhtml">ConstraintViolation.h</a></div></div>
<div class="ttc" id="structFitness_xhtml_a50bf7f366d9e182293184ebee7297df1"><div class="ttname"><a href="structFitness.xhtml#a50bf7f366d9e182293184ebee7297df1">Fitness::getInternalFitness</a></div><div class="ttdeci">F getInternalFitness(int i)</div><div class="ttdoc">Get a partial fitness based on its index in the list of values that represents the actual Fitness...</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00135">Fitness.h:135</a></div></div>
<div class="ttc" id="structPosition_xhtml"><div class="ttname"><a href="structPosition.xhtml">Position</a></div><div class="ttdoc">This structure represents one location within 1-dimension of the search space. </div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00026">Position.h:26</a></div></div>
<div class="ttc" id="classSolution_xhtml_ad783c91ad12c21e861a4639e72c4fd50"><div class="ttname"><a href="classSolution.xhtml#ad783c91ad12c21e861a4639e72c4fd50">Solution::operator[]</a></div><div class="ttdeci">Position&lt; P, pSize &gt; * operator[](int i)</div><div class="ttdoc">Operator that selects a Position based on its index in the list of positions. </div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00150">Solution.h:150</a></div></div>
<div class="ttc" id="structPosition_xhtml_af5e0d1ae77f5840a090325a7ba9fd8b5"><div class="ttname"><a href="structPosition.xhtml#af5e0d1ae77f5840a090325a7ba9fd8b5">Position::getInternalPosition</a></div><div class="ttdeci">P getInternalPosition(int i)</div><div class="ttdoc">Get a partial position based on its index in the list of values that represents the actual Position...</div><div class="ttdef"><b>Definition:</b> <a href="Position_8h_source.xhtml#l00315">Position.h:315</a></div></div>
<div class="ttc" id="classSolution_xhtml_a7681f8c7d0c20381203276c7b9a26374"><div class="ttname"><a href="classSolution.xhtml#a7681f8c7d0c20381203276c7b9a26374">Solution::operator==</a></div><div class="ttdeci">bool operator==(Solution&lt; P, pSize, F, fSize, V, vSize &gt; *solution)</div><div class="ttdef"><b>Definition:</b> <a href="Solution_8h_source.xhtml#l00129">Solution.h:129</a></div></div>
<div class="ttc" id="classRegion_xhtml_a07c792e7ab2768254d71a0b688ccd935"><div class="ttname"><a href="classRegion.xhtml#a07c792e7ab2768254d71a0b688ccd935">Region::getPartitions</a></div><div class="ttdeci">map&lt; Dimension&lt; P &gt; *, Partition&lt; P &gt; * &gt; * getPartitions()</div><div class="ttdoc">Get the map of Partitions that compose the current &quot;anchor&quot; sub-region. </div><div class="ttdef"><b>Definition:</b> <a href="Region_8h_source.xhtml#l00128">Region.h:128</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Oct 7 2020 13:08:19 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>

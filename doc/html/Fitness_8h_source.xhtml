<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Treasure Hunt: src/TH/Fitness.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TH-logo-2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Treasure Hunt
   </div>
   <div id="projectbrief">Treasure Hunt Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_c1f8c841dbb68f6f1ba9638c450c5e03.xhtml">TH</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Fitness.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Fitness_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#ifndef FITNESS_H_</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#define FITNESS_H_</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> F = <span class="keywordtype">double</span>, <span class="keywordtype">int</span> fSize = 1&gt;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="structFitness.xhtml">   37</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structFitness.xhtml">Fitness</a> {</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">   38</a></span>&#160;    F <a class="code" href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">internalFitness</a>[fSize];</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">   39</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a> = fSize;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a73ef98fc5780e1e15bbfac6177bd5c5a">   41</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structFitness.xhtml#a73ef98fc5780e1e15bbfac6177bd5c5a">checkCompatibility</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> *fitness) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">if</span>(fitness == NULL) {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Fitness can not be empty.&quot;</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span>(size != fitness-&gt;<a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a>) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Fitness&#39;s internal size is not compatible.&quot;</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a557b47961eb4a4589c53ee54f975e65e">   59</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structFitness.xhtml#a557b47961eb4a4589c53ee54f975e65e">operator =</a>(F *buffer) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">if</span> (buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a>; i++){</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            internalFitness[i] = buffer[i];</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a19e4c2cc608e17611deacc194d83dc89">   72</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structFitness.xhtml#a557b47961eb4a4589c53ee54f975e65e">operator =</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> *fitness){</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="structFitness.xhtml#a73ef98fc5780e1e15bbfac6177bd5c5a">checkCompatibility</a>(fitness);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        *<span class="keyword">this</span> = fitness-&gt;<a class="code" href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">internalFitness</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structFitness.xhtml#afd45c5c802ca9d0086685e85730f13da">   83</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structFitness.xhtml#a557b47961eb4a4589c53ee54f975e65e">operator =</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> &amp;fitness){</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="structFitness.xhtml#a73ef98fc5780e1e15bbfac6177bd5c5a">checkCompatibility</a>(&amp;fitness);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        *<span class="keyword">this</span> = fitness.<a class="code" href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">internalFitness</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a875d901a35662cf786bcc17b9e1a6983">   93</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structFitness.xhtml#a557b47961eb4a4589c53ee54f975e65e">operator =</a>(F value) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a>; i++){</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            internalFitness[i] = value;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">  108</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">equals</a>(F *buffer){</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a>; i++){</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">if</span>(this-&gt;internalFitness[i] != buffer[i]) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="structFitness.xhtml#acfc0528bc5ec716f1c06a58086c59b50">  123</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structFitness.xhtml#acfc0528bc5ec716f1c06a58086c59b50">equals</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> *fitness){</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="structFitness.xhtml#a73ef98fc5780e1e15bbfac6177bd5c5a">checkCompatibility</a>(fitness);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">equals</a>(fitness-&gt;<a class="code" href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">internalFitness</a>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a87880c3a43c0bf6068c687d71e96bbfc">  127</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structFitness.xhtml#a87880c3a43c0bf6068c687d71e96bbfc">operator ==</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> *fitness){</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">return</span> fitness != NULL &amp;&amp; <a class="code" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">equals</a>(fitness);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a525bb798a0016fada60e60a601c46510">  130</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structFitness.xhtml#a87880c3a43c0bf6068c687d71e96bbfc">operator ==</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> &amp;fitness){</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> fitness != NULL &amp;&amp; <a class="code" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">equals</a>(&amp;fitness);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a4cab5f7960366b61b34213efc89a4288">  133</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structFitness.xhtml#a4cab5f7960366b61b34213efc89a4288">operator !=</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> *fitness){</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">return</span> fitness == NULL || ! <a class="code" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">equals</a>(fitness);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a01be3acc37c269b11b2697d135759f20">  136</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structFitness.xhtml#a4cab5f7960366b61b34213efc89a4288">operator !=</a>(<a class="code" href="structFitness.xhtml">Fitness&lt;F, fSize&gt;</a> &amp;fitness){</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> fitness == NULL || ! <a class="code" href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">equals</a>(&amp;fitness);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="structFitness.xhtml#a50bf7f366d9e182293184ebee7297df1">  150</a></span>&#160;    F <a class="code" href="structFitness.xhtml#a50bf7f366d9e182293184ebee7297df1">getInternalFitness</a>(<span class="keywordtype">int</span> i){</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">if</span>(i &lt; 0 || i &gt;= fSize) <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Invalid index for internal fitness.&quot;</span>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">return</span> internalFitness[i];</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="structFitness.xhtml#ab25220be9e68b4737a91a7b307c5e4d5">  159</a></span>&#160;    F* <a class="code" href="structFitness.xhtml#ab25220be9e68b4737a91a7b307c5e4d5">getInternalFitness</a>(){ <span class="keywordflow">return</span> <a class="code" href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">internalFitness</a>; }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="structFitness.xhtml#aeb0b0935f54a9798faf30ddb4216d10a">  169</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structFitness.xhtml#aeb0b0935f54a9798faf30ddb4216d10a">getInternalFitness</a>(F *buffer) {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span>(buffer == NULL) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; <a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a>; i++){</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            buffer[i] = internalFitness[i];</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="structFitness.xhtml#ac6513eb1ca76f5618cbc0a2f4e25139c">  183</a></span>&#160;    F <a class="code" href="structFitness.xhtml#ac6513eb1ca76f5618cbc0a2f4e25139c">getFirstValue</a>(){ <span class="keywordflow">return</span> internalFitness[0]; }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="structFitness.xhtml#acebcc12ee16b4c1a95f9a16c0ba82191">  189</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structFitness.xhtml#acebcc12ee16b4c1a95f9a16c0ba82191">getFitnessSize</a>() { <span class="keywordflow">return</span> <a class="code" href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">size</a>; }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;};</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* FITNESS_H_ */</span><span class="preprocessor"></span></div><div class="ttc" id="structFitness_xhtml"><div class="ttname"><a href="structFitness.xhtml">Fitness</a></div><div class="ttdoc">This structure represents the fitness (or cost) of one Solution. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00037">Fitness.h:37</a></div></div>
<div class="ttc" id="structFitness_xhtml_a87880c3a43c0bf6068c687d71e96bbfc"><div class="ttname"><a href="structFitness.xhtml#a87880c3a43c0bf6068c687d71e96bbfc">Fitness::operator==</a></div><div class="ttdeci">bool operator==(Fitness&lt; F, fSize &gt; *fitness)</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00127">Fitness.h:127</a></div></div>
<div class="ttc" id="structFitness_xhtml_a4cab5f7960366b61b34213efc89a4288"><div class="ttname"><a href="structFitness.xhtml#a4cab5f7960366b61b34213efc89a4288">Fitness::operator!=</a></div><div class="ttdeci">bool operator!=(Fitness&lt; F, fSize &gt; *fitness)</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00133">Fitness.h:133</a></div></div>
<div class="ttc" id="structFitness_xhtml_a557b47961eb4a4589c53ee54f975e65e"><div class="ttname"><a href="structFitness.xhtml#a557b47961eb4a4589c53ee54f975e65e">Fitness::operator=</a></div><div class="ttdeci">void operator=(F *buffer)</div><div class="ttdoc">Operator that assigns the values of a buffer to the list that represents the current Fitness...</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00059">Fitness.h:59</a></div></div>
<div class="ttc" id="structFitness_xhtml_abffc9af3988e39e82dc81fc006e6ef4a"><div class="ttname"><a href="structFitness.xhtml#abffc9af3988e39e82dc81fc006e6ef4a">Fitness::internalFitness</a></div><div class="ttdeci">F internalFitness[fSize]</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00038">Fitness.h:38</a></div></div>
<div class="ttc" id="structFitness_xhtml_ab25220be9e68b4737a91a7b307c5e4d5"><div class="ttname"><a href="structFitness.xhtml#ab25220be9e68b4737a91a7b307c5e4d5">Fitness::getInternalFitness</a></div><div class="ttdeci">F * getInternalFitness()</div><div class="ttdoc">Get a pointer to the actual list of values that represents the Fitness. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00159">Fitness.h:159</a></div></div>
<div class="ttc" id="structFitness_xhtml_ac6513eb1ca76f5618cbc0a2f4e25139c"><div class="ttname"><a href="structFitness.xhtml#ac6513eb1ca76f5618cbc0a2f4e25139c">Fitness::getFirstValue</a></div><div class="ttdeci">F getFirstValue()</div><div class="ttdoc">Get the first value from the list of values that represents the Fitness. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00183">Fitness.h:183</a></div></div>
<div class="ttc" id="structFitness_xhtml_ab487af790e21882d9308356e9b8fbf0d"><div class="ttname"><a href="structFitness.xhtml#ab487af790e21882d9308356e9b8fbf0d">Fitness::size</a></div><div class="ttdeci">int size</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00039">Fitness.h:39</a></div></div>
<div class="ttc" id="structFitness_xhtml_acebcc12ee16b4c1a95f9a16c0ba82191"><div class="ttname"><a href="structFitness.xhtml#acebcc12ee16b4c1a95f9a16c0ba82191">Fitness::getFitnessSize</a></div><div class="ttdeci">int getFitnessSize()</div><div class="ttdoc">Get the number of values that represents a Fitness. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00189">Fitness.h:189</a></div></div>
<div class="ttc" id="structFitness_xhtml_acfc0528bc5ec716f1c06a58086c59b50"><div class="ttname"><a href="structFitness.xhtml#acfc0528bc5ec716f1c06a58086c59b50">Fitness::equals</a></div><div class="ttdeci">bool equals(Fitness&lt; F, fSize &gt; *fitness)</div><div class="ttdoc">Compares the current fitness with the fitness received. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00123">Fitness.h:123</a></div></div>
<div class="ttc" id="structFitness_xhtml_a73ef98fc5780e1e15bbfac6177bd5c5a"><div class="ttname"><a href="structFitness.xhtml#a73ef98fc5780e1e15bbfac6177bd5c5a">Fitness::checkCompatibility</a></div><div class="ttdeci">void checkCompatibility(Fitness&lt; F, fSize &gt; *fitness)</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00041">Fitness.h:41</a></div></div>
<div class="ttc" id="structFitness_xhtml_a50bf7f366d9e182293184ebee7297df1"><div class="ttname"><a href="structFitness.xhtml#a50bf7f366d9e182293184ebee7297df1">Fitness::getInternalFitness</a></div><div class="ttdeci">F getInternalFitness(int i)</div><div class="ttdoc">Get a partial fitness based on its index in the list of values that represents the actual Fitness...</div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00150">Fitness.h:150</a></div></div>
<div class="ttc" id="structFitness_xhtml_abd044181ac7240fa59c7a25fbcca5150"><div class="ttname"><a href="structFitness.xhtml#abd044181ac7240fa59c7a25fbcca5150">Fitness::equals</a></div><div class="ttdeci">bool equals(F *buffer)</div><div class="ttdoc">Compares the current fitness with the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00108">Fitness.h:108</a></div></div>
<div class="ttc" id="structFitness_xhtml_aeb0b0935f54a9798faf30ddb4216d10a"><div class="ttname"><a href="structFitness.xhtml#aeb0b0935f54a9798faf30ddb4216d10a">Fitness::getInternalFitness</a></div><div class="ttdeci">void getInternalFitness(F *buffer)</div><div class="ttdoc">This method copies the contents of current Fitness to the buffer received. </div><div class="ttdef"><b>Definition:</b> <a href="Fitness_8h_source.xhtml#l00169">Fitness.h:169</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Oct 10 2020 18:30:47 for Treasure Hunt by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
